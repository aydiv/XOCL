// Definition of ecosystemmanagement transactions
package com.x.ecosystemmanagement.v1 {
	import com.x.ecosystemmanagement.v1.*
	
	// this is suppose to be a very simple transaction.  no fancy stuff.
	// TODO: mark as: unicast
	transaction PingCapability response {
		description "A capability sends a Ping message to a different capability in hopes to receive a corresponding Pong message."
        sender
        {
        	message Ping
        	{
        		timeouts(response=30s)     		
        	}
        }
        receiver
        {
        	// one of these two messages must be sent back to the sender as a response
        	success Pong 
            failure MessageDeliveryFailed 
        } 
    }
    
    // TODO: mark as: unicast
    transaction UpdateCapabilityEndpoint response {
    	description "A capability needs to update its URL where the Fabric delivers its messages."
        sender
        {
        	message UpdateCapabilityEndpoint
        	{
        		timeouts(response=30s)     		
        	}
        }
        receiver
        {
        	// one of these two messages must be sent back to the sender as a response
        	success CapabilityEndpointUpdated
            failure UpdateCapabilityEndpointFailed
        } 
    }
    
    // ------------------------------------------------------------------------
    // onboarding tenant
    // ------------------------------------------------------------------------
    
    // TODO: ideally this is marked as: unicast 
    transaction AcquireBundle response {
    	description "The AppStore requests the Fabric to aquire a specific bundle for the given tenant"
    	sender
    	{
    		message AcquireBundle
    	}
    	receiver
    	{
    		success BundleAcquired
    		failure AcquireBundleFailed
    	}
    }
    
    // TODO: mark as: unicast
    transaction PerformContracts response {
    	description "The Fabric requests that a capability perform its contracts for the given tenant"
    	sender
    	{
    		message PerformContracts
    	}
    	receiver 
    	{
    		success ContractsPerformed
    		failure PerformContractsFailed
    	}
    }
    
    // TODO: (assuming there is *one* AppStore) mark as: unicast
    transaction CollectTenantCredentials response {
    	description "The Fabric requests that an AppStore collect credentials from a set of capabilities for a given tenant"
    	sender
    	{
    		message CollectTenantCredentials
    	}
    	receiver
    	{
    		success TenantCredentialsCollected
    		failure CollectTenantCredentialsFailed  // TODO: what about partial failures?
    	}
    }
    
    // TODO: mark as: unicast
    transaction AcceptTenantRelationship response {
    	description "The Fabric requests that a capability accept a new tenant relationship"
    	sender
    	{
    		message AcceptTenantRelationship
    	}
    	receiver
    	{
    		success TenantRelationshipAccepted
    		failure AcceptTenantRelationshipFailed
    	}
    }

}