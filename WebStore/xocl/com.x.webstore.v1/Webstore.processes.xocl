package com.x.webstore.v1{
	
	import com.x.webstore.v1.*
	
	process WebStoreMetadataProvision 
	{
		description "A marketing provider or other interested party queries for all available web stores for a particular tenant, then retrieves metadata about those web stores"
	
	
		roles(WebStoreMetadataConsumer,WebStoreMetadataProvider)
	
		workflow
		{
			any{
				transaction GetAllWebStoreProvider 
				{
					roles(WebStoreMetadataConsumer, WebStoreMetadataProvider)
				} 
			}
			any{
				transaction GetAllWebStore
				{
					roles(WebStoreMetadataConsumer, WebStoreMetadataProvider)
				}	
			}
			any{
				transaction GetAllCategories
				{
					roles(WebStoreMetadataConsumer, WebStoreMetadataProvider)
				}
			}
			
		}
	}
	
	
    process WebStoreOfferSearch 
	{
		description "A marketing provider or other interested party queries for offers"
	
		roles(WebStoreOfferConsumer,WebStoreOfferManager)
	
		workflow
		{
			transaction SearchWebStoreOffer
			{
				roles(WebStoreOfferConsumer, WebStoreOfferManager)
			}
		}
	}
	
	process WebStoreOfferCreation
	{
		description "Creating an offer in a web store"
	
		roles(WebStoreOfferConsumer,WebStoreOfferManager, WebStoreOfferObserver)
	
		workflow
		{
			any{
				transaction CreateWebStoreOffer
				{
					roles(WebStoreOfferConsumer, WebStoreOfferManager)
				}
			}
			transaction WebStoreOfferCreated
			{
				roles (WebStoreOfferManager, WebStoreOfferObserver)
			}
		}		
	}
	
	process WebStoreOfferUpdate
	{
		description "Updating an offer in a web store"
	
		roles(WebStoreOfferConsumer,WebStoreOfferManager, WebStoreOfferObserver)
	
		workflow
		{
			any{
				transaction UpdateWebStoreOffer
				{
					roles(WebStoreOfferConsumer, WebStoreOfferManager)
				}
			}
			any{ //it's possible an update may cause none or both of these events to happen
				noop
				transaction WebStoreOfferQuantityUpdated
				{
					roles (WebStoreOfferManager, WebStoreOfferObserver)
				}
				transaction WebStoreOfferPriceUpdated
			    {
			    	roles (WebStoreOfferManager, WebStoreOfferObserver)
			    }
			}
		}		
	}
	
	process WebStoreOfferDeletion
	{
		description "Deleting an offer in a web store"
	
		roles(WebStoreOfferConsumer,WebStoreOfferManager, WebStoreOfferObserver)
	
		workflow
		{
			any{
				transaction DeleteWebStoreOffer
				{
					roles(WebStoreOfferConsumer, WebStoreOfferManager)
				}
			}
			transaction WebStoreOfferDeleted
			{
				roles (WebStoreOfferManager, WebStoreOfferObserver)
			}
		}		
	}
	
}
