package com.x.webstore.v1{
	
	import com.x.webstore.v1.*
	
	process WebStoreMetadataProvision 
	{
		summary "Retrieves the metadata for all available stores."
		description "A marketing provider or other interested party queries for all available online stores for a particular tenant, then retrieves metadata about those online stores."
	
		roles 
			{
				WebStoreMetadataConsumer "Acts for a tenant and searches for all available providers and their web stores."
				WebStoreMetadataProvider "Returns the metadata of the providers and web stores found."
			}
	
		workflow
		{
			summary "Returns the metadata for all online stores found."
			description "Searches for all available online stores and returns the metadata of the stores that were found."
			
			any{
				transaction GetAllWebStoreProvider 
				{
					roles(WebStoreMetadataConsumer, WebStoreMetadataProvider)
				} 
			}
			any{
				transaction GetAllWebStore
				{
					roles(WebStoreMetadataConsumer, WebStoreMetadataProvider)
				}	
			}
			any{
				transaction GetAllCategory
				{
					roles(WebStoreMetadataConsumer, WebStoreMetadataProvider)
				}
			}
			
		}
	}
	
	
    process WebStoreOfferSearch 
	{
		summary "Searches the offers from the web stores."
		description "A marketing provider or other interested party queries for offers."
	
		roles  
			{
				WebStoreOfferConsumer "Searches for offers from the available web stores."
				WebStoreOfferManager "Returns the offers found."
			}
		workflow
		{
			summary "Retrieves the offers from the web stores."
			description "Returns the offers from the web stores."
			
			transaction SearchWebStoreOffer
			{
				roles(WebStoreOfferConsumer, WebStoreOfferManager)
			}
		}
	}
	
	process WebStoreOfferCreation
	{
		summary "Creates an offer."
		description "Creates an offer for a web store."
	
		roles
			{
				WebStoreOfferConsumer "Searches for offers from the available web stores."
				WebStoreOfferManager "Returns the offers found."
				WebStoreOfferObserver "Sends a message that the offer has been created, updated, or deleted."
			}
	
		workflow
		{
			summary "Creates an offer."
			description "Creates an offer for a web store."
			
			any{
				transaction CreateWebStoreOffer
				{
					roles(WebStoreOfferConsumer, WebStoreOfferManager)
				}
			}
			transaction WebStoreOfferCreated
			{
				roles (WebStoreOfferManager, WebStoreOfferObserver)
			}
		}		
	}
	
	process WebStoreOfferUpdate
	{
		summary "Updates offer information."
		description "Updates the offer information, such as price or quantity."
	
		roles(WebStoreOfferConsumer, WebStoreOfferManager, WebStoreOfferObserver)
	
		workflow
		{
			summary "Updates offer information."
			description "Updates the offer information, such as price or quantity."
			
			any{
				transaction UpdateWebStoreOffer
				{
					roles(WebStoreOfferConsumer, WebStoreOfferManager)
				}
			}
			do{ 
				transaction WebStoreOfferUpdated
			    {
			    	roles(WebStoreOfferManager, WebStoreOfferObserver)
			    }
				any{
					noop
					transaction WebStoreOfferQuantityUpdated
					{
						roles (WebStoreOfferManager, WebStoreOfferObserver)
					}
					transaction WebStoreOfferPriceUpdated
			    	{
			    		roles (WebStoreOfferManager, WebStoreOfferObserver)
			    	}	
			    }

			}
		}		
	}
	
	process WebStoreOfferDeletion
	{
		summary "Deletes an offer."
		description "Deletes an offer."
	
		roles(WebStoreOfferConsumer,WebStoreOfferManager, WebStoreOfferObserver)
	
		workflow
		{
			summary "Deletes an offer."
			description "Deletes an offer."
			
			any{
				transaction DeleteWebStoreOffer
				{
					roles(WebStoreOfferConsumer, WebStoreOfferManager)
				}
			}
			transaction WebStoreOfferDeleted
			{
				roles (WebStoreOfferManager, WebStoreOfferObserver)
			}
		}		
	}
	
}
