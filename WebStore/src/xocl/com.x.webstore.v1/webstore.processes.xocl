package com.x.webstore.v1{
	
	import com.x.webstore.v1.*
	
	process WebStoreMetadataProvision 
	{
		summary "TBD"
		description "A marketing provider or other interested party queries for all available web stores for a particular tenant, then retrieves metadata about those web stores"
	
		roles 
			{
				WebStoreMetadataConsumer "TBD"
				WebStoreMetadataProvider "TBD"
			}
	
		workflow
		{
			summary "TBD"
			description "TBD"
			
			any{
				transaction GetAllWebStoreProvider 
				{
					roles(WebStoreMetadataConsumer, WebStoreMetadataProvider)
				} 
			}
			any{
				transaction GetAllWebStore
				{
					roles(WebStoreMetadataConsumer, WebStoreMetadataProvider)
				}	
			}
			any{
				transaction GetAllCategory
				{
					roles(WebStoreMetadataConsumer, WebStoreMetadataProvider)
				}
			}
			
		}
	}
	
	
    process WebStoreOfferSearch 
	{
		summary "TBD"
		description "A marketing provider or other interested party queries for offers"
	
		roles  
			{
				WebStoreOfferConsumer "TBD"
				WebStoreOfferManager "TBD"
			}
		workflow
		{
			summary "TBD"
			description "TBD"
			
			transaction SearchWebStoreOffer
			{
				roles(WebStoreOfferConsumer, WebStoreOfferManager)
			}
		}
	}
	
	process WebStoreOfferCreation
	{
		summary "TBD"
		description "Creating an offer in a web store"
	
		roles
			{
				WebStoreOfferConsumer "TBD"
				WebStoreOfferManager "TBD"
				WebStoreOfferObserver "TBD"
			}
	
		workflow
		{
			summary "TBD"
			description "TBD"
			
			any{
				transaction CreateWebStoreOffer
				{
					roles(WebStoreOfferConsumer, WebStoreOfferManager)
				}
			}
			transaction WebStoreOfferCreated
			{
				roles (WebStoreOfferManager, WebStoreOfferObserver)
			}
		}		
	}
	
	process WebStoreOfferUpdate
	{
		summary "TBD"
		description "Updating an offer in a web store"
	
		roles(WebStoreOfferConsumer,WebStoreOfferManager, WebStoreOfferObserver)
	
		workflow
		{
			summary "TBD"
			description "TBD"
			
			any{
				transaction UpdateWebStoreOffer
				{
					roles(WebStoreOfferConsumer, WebStoreOfferManager)
				}
			}
			do{ 
				transaction WebStoreOfferUpdated
			    {
			    	roles(WebStoreOfferManager, WebStoreOfferObserver)
			    }
				any{
					noop
					transaction WebStoreOfferQuantityUpdated
					{
						roles (WebStoreOfferManager, WebStoreOfferObserver)
					}
					transaction WebStoreOfferPriceUpdated
			    	{
			    		roles (WebStoreOfferManager, WebStoreOfferObserver)
			    	}	
			    }

			}
		}		
	}
	
	process WebStoreOfferDeletion
	{
		summary "TBD"
		description "Deleting an offer in a web store"
	
		roles(WebStoreOfferConsumer,WebStoreOfferManager, WebStoreOfferObserver)
	
		workflow
		{
			summary "TBD"
			description "TBD"
			
			any{
				transaction DeleteWebStoreOffer
				{
					roles(WebStoreOfferConsumer, WebStoreOfferManager)
				}
			}
			transaction WebStoreOfferDeleted
			{
				roles (WebStoreOfferManager, WebStoreOfferObserver)
			}
		}		
	}
	
}
