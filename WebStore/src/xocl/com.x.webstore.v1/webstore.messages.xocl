package com.x.webstore.v1{
	
	import com.x.core.v1.*
	
	enum OfferState{
		PUBLISHED,
		SUSPENDED
	}
	
    record WebStore{
    	string webStoreName;
    	string webStoreId;
		string language;
		string currencyCode;
		string url;
	}
	
	record WebStoreOffer{
		string offerId;
		OfferState offerState;
	}
	
	record WebStoreOfferData extends WebStoreOffer{
		string url;
		CurrencyAmount currentPrice;
		long quantity;
		string sku;
		string webStoreId;
		array<string>? categoryId;
	}
	
	record Category {
		string id;
		string name;
		string parentId
		string? categoryUrl;
	}
	record GetAllCategory{
		string webStoreId;
	}  
	record GetAllCategorySucceeded{
		string webStoreId;
		array<Category> categories;
	} 
	record GetAllCategoryFailed{
		string webStoreId;
		array<Error> errors;
	}    
    record GetAllWebStoreProvider {

	}
	
    record GetAllWebStoreProviderSucceeded {
		string providerName;
		 //Caller must get destination ID from header - X-XC-PUBLISHER-ID
	}
	
	record GetAllWebStore {
	}
	
    record GetAllWebStoreSucceeded {
		string providerName;
	    //Caller must get destination ID from header - X-XC-PUBLISHER-ID
	    array<WebStore> stores;
	}
	
	
	record GetAllWebStoreFailed {
		string providerName;
	    array<Error> errors;
	}
	
	
	record SearchWebStoreOffer{
  
    	string? webStoreId;
		
		/* When this field is present, get all customers modified since this date that also match the other criteria */
		datetime? modifiedSince;
		
		/**
		 * Restrict the number of items return to this many or less.
		 * When null, it is assumed there is no restriction
		 */
		long? itemsRequested;
		
		/**
		 * Return the results starting from this zero-based index.
		 * When null, items will be returned started from the first item
		 */
		long? startItemIndex;
	}
	
	record SearchWebStoreOfferSucceeded{	
		array<WebStoreOffer> webStoreOffers;
		long totalItemsFound;
		SearchWebStoreOffer request;
	}
	
	record SearchWebStoreOfferFailed{
		array<Error> errors;
		SearchWebStoreOffer request;
	}
	record CreateWebStoreOffer{
		WebStoreOfferData offer;
	}
    record CreateWebStoreOfferSucceeded{
		WebStoreOffer offer;
	}
	record CreateWebStoreOfferFailed{
		WebStoreOfferData offer;
		array<Error> errors;
	}
	record UpdateWebStoreOffer{
		WebStoreOffer offer;
	}
    record UpdateWebStoreOfferSucceeded{
		WebStoreOffer offer;
	}
	record UpdateWebStoreOfferFailed{
		WebStoreOffer offer;
		array<Error> errors;
	}
	record DeleteWebStoreOffer{
		string offerId;
	}
	record DeleteWebStoreOfferSucceeded{
		string offerId;
	}
	record DeleteWebStoreOfferFailed{
		string offerId;
		array<Error> errors;
	}
	record WebStoreOfferCreated{
		WebStoreOffer offer;
	}
	record WebStoreOfferUpdated{
		WebStoreOffer offer;
	}
	record WebStoreOfferDeleted{
		WebStoreOffer offer;
	}
	
    record WebStoreOfferPriceUpdated{
	    string sku;
		CurrencyAmount currentPrice;
		string webStoreId;
	}
	
    record WebStoreOfferQuantityUpdated{
		string sku;
		long quantity;
		string webStoreId;
	}
}