/**
 * This is a autogenerated using the com.x.ocl:xocl-maven-plugin:1.4.2 maven plugin.
 * The contents are generated from the following XOCL files:
 *            marketplace.processes.xocl
 *            ebay.processes.xocl
 *            ebay.transactions.xocl
 *            ebay.contracts.xocl
 *            ebay.messages.xocl
 *            marketplace.messages.xocl
 *            marketplace.version.xocl
 *            marketplace.transactions.xocl
 *            marketplace.contracts.xocl
 * DO NOT EDIT THIS FILE DIRECTLY
 */
@namespace("com.x.marketplace.v3")
@status("workingdraft")
protocol com_x_marketplace_v3 {
	import idl "com.x.ordermanagement.v2.avdl";
	import idl "com.x.core.v1.avdl";
	import idl "com.x.pim.v1.avdl";
	import idl "com.x.authz.v1.avdl";

	@topics("/com.x.marketplace.v3/PolicyGroupDeletion/DeletePolicyGroupSucceeded")
	@version("3.1.2")
	record DeletePolicyGroupSucceeded {
		string policyGroupId;
  	}

	enum ShippingRateType {
		FLAT,
		CALCULATED,
		FREIGHT
	}

	record Site {
		string siteCode;
 		string siteName;
  	}

	@topics("/com.x.marketplace.v3/MarketplaceSetup/GetAllSitesSucceeded")
	@version("3.1.2")
	record GetAllSitesSucceeded {
		array<Site> sites;
  	}

	record SupportedCountry {
		string countryCode;
 		string description;
  	}

	@topics("/com.x.marketplace.v3/PolicyGroupDeletion/DeletePolicyGroup")
	@version("3.1.2")
	record DeletePolicyGroup {
		string policyGroupId;
  	}

	@topics("/com.x.marketplace.v3/AuthorizationRevoke/RevokeAuthorizationFailed")
	@version("3.1.2")
	record RevokeAuthorizationFailed {
		string xAccountId;
 		array<com.x.core.v1.Error> errors;
  	}

	record CancelOfferError {
		string offerId;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.marketplace.v3/PublishedOfferRevocation/RevokePublishedOfferFailed")
	@version("3.1.2")
	record RevokePublishedOfferFailed {
		CancelOfferError cancelError;
 		union{null,string} policyGroupId = null;
  	}

	@topics("/com.x.marketplace.v3/AuthorizedAccountSearch/GetAllAuthorizedAccountFailed")
	@version("3.1.2")
	record GetAllAuthorizedAccountFailed {
		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.marketplace.v3/PolicyGroupDeletion/DeletePolicyGroupFailed")
	@version("3.1.2")
	record DeletePolicyGroupFailed {
		string policyGroupId;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.marketplace.v3/AuthorizationRevoke/RevokeAuthorizationSucceeded")
	@version("3.1.2")
	record RevokeAuthorizationSucceeded {
		string xAccountId;
  	}

	record OfferDeactivated {
		string offerId;
 		string reason;
 		union{null,string} policyGroupId = null;
  	}

	record Category {
		string id;
 		string name;
 		union{null,string} parentId = null;
 		union{null,boolean} catalogEnabled = null;
 		union{null,int} categoryLevel = null;
 		union{null,boolean} leafCategory = null;
 		union{null,string} categoryUrl = null;
  	}

	@topics("/com.x.marketplace.v3/MarketplaceSetup/SearchCategoriesSucceeded")
	@version("3.1.2")
	record SearchCategoriesSucceeded {
		array<Category> categories;
 		union{null,string} siteCode = null;
 		union{null,string} environmentName = null;
  	}

	record Sku {
		string sku;
 		com.x.core.v1.CurrencyAmount price;
 		int quantity;
  	}

	@topics("/com.x.marketplace.v3/OfferSearch/SearchOffers /com.x.marketplace.v3/OfferSearch.Ebay/SearchOffers")
	@version("3.1.2")
	record SearchOffers {
		union{null,array<string>} skus = null;
 		//A string representing the date and time as defined by RFC 3339's 'date-time' format with 'time-secfrac' defined.
		union{null,string} startTime = null;
 		//A string representing the date and time as defined by RFC 3339's 'date-time' format with 'time-secfrac' defined.
		union{null,string} endTime = null;
  	}

	@topics("/com.x.marketplace.v3/OfferSearch/SearchOffersFailed /com.x.marketplace.v3/OfferSearch.Ebay/SearchOffersFailed")
	@version("3.1.2")
	record SearchOffersFailed {
		SearchOffers request;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.marketplace.v3/StoreLookup/LookupStore")
	@version("3.1.2")
	record LookupStore {
		union{null,string} xAccountId = null;
 		union{null,string} userMarketplaceId = null;
 		union{null,string} siteCode = null;
 		union{null,string} environmentName = null;
  	}

	@topics("/com.x.marketplace.v3/StoreLookup/LookupStoreFailed")
	@version("3.1.2")
	record LookupStoreFailed {
		LookupStore request;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.marketplace.v3/PublishedOfferRevocation/RevokePublishedOfferSucceeded")
	@version("3.1.2")
	record RevokePublishedOfferSucceeded {
		string offerId;
 		union{null,string} policyGroupId = null;
  	}

	enum ShippingLocaleType {
		DOMESTIC,
		INTERNATIONAL
	}

	record SupportedShippingService {
		string description;
 		union{null,string} carrier = null;
 		string serviceName;
 		int shippingTimeMaxInDays;
 		int shippingTimeMinInDays;
 		union{null,ShippingRateType} rateType = null;
 		ShippingLocaleType localeType;
 		boolean dimensionsRequired;
 		boolean weightRequired;
 		boolean surchargeApplicable;
  	}

	@topics("/com.x.marketplace.v3/PolicyGroupLookup.Ebay/LookupPolicyGroup /com.x.marketplace.v3/PolicyGroupLookup/LookupPolicyGroup")
	@version("3.1.2")
	record LookupPolicyGroup {
		string policyGroupId;
  	}

	@topics("/com.x.marketplace.v3/MarketplaceSetup/GetAllSites")
	@version("3.1.2")
	record GetAllSites {
 	}

	record ShippingServiceOption {
		int sellerPriority;
 		string serviceName;
 		com.x.core.v1.CurrencyAmount cost;
 		union{null,com.x.core.v1.CurrencyAmount} discountAmount = null;
 		union{null,com.x.core.v1.CurrencyAmount} additionalCost = null;
 		union{null,com.x.core.v1.CurrencyAmount} packagingHandlingCost = null;
 		union{null,com.x.core.v1.CurrencyAmount} surcharge = null;
 		union{null,array<string>} shipToLocations = null;
 		union{null,array<string>} excludeShipToLocations = null;
  	}

	record ShippingServiceOptionGroup {
		ShippingRateType rateType;
 		ShippingLocaleType localeType;
 		boolean applyPromotionalShippingRule;
 		array<ShippingServiceOption> shippingServiceOptions;
  	}

	record ShippingPolicy {
		array<ShippingServiceOptionGroup> optionGroups;
  	}

	@topics("/com.x.marketplace.v3/MarketplaceSetup/SearchCategoriesFailed")
	@version("3.1.2")
	record SearchCategoriesFailed {
		union{null,string} siteCode = null;
 		union{null,string} environmentName = null;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.marketplace.v3/MarketplaceSetup/GetAllAvailableChannels")
	@version("3.1.2")
	record GetAllAvailableChannels {
 	}

	@topics("/com.x.marketplace.v3/AuthorizedAccountSearch/GetAllAuthorizedAccount")
	@version("3.1.2")
	record GetAllAuthorizedAccount {
 	}

	@topics("/com.x.marketplace.v3/PublishedOfferRevocation/RevokePublishedOffer")
	@version("3.1.2")
	record RevokePublishedOffer {
		string offerId;
 		union{null,string} policyGroupId = null;
  	}

	record PaymentPolicy {
		union{null,array<com.x.core.v1.PaymentMethod>} acceptedPaymentTypes = null;
 		union{null,boolean} immediatePaymentRequired = null;
 		union{null,string} paymentInstructions = null;
  	}

	record Environment {
		string name;
  	}

	@topics("/com.x.marketplace.v3/AuthorizationRevoke/RevokeAuthorization")
	@version("3.1.2")
	record RevokeAuthorization {
		string xAccountId;
  	}

	@topics("/com.x.marketplace.v3/MarketplaceSetup/LookupSiteMetadata")
	@version("3.1.2")
	record LookupSiteMetadata {
		array<string> siteCode;
 		union{null,string} environmentName = null;
  	}

	record MarketplaceAccount {
		union{null,string} xId = null;
 		union{null,string} userMarketplaceId = null;
 		union{null,string} siteCode = null;
 		union{null,string} environmentName = null;
 		union{null,long} authorizationExpiration = null;
  	}

	@topics("/com.x.marketplace.v3/AuthorizedAccountSearch/GetAllAuthorizedAccountSucceeded")
	@version("3.1.2")
	record GetAllAuthorizedAccountSucceeded {
		array<MarketplaceAccount> accounts;
  	}

	@topics("/com.x.marketplace.v3/PolicyGroupLookup/LookupPolicyGroupFailed /com.x.marketplace.v3/PolicyGroupLookup.Ebay/LookupPolicyGroupFailed")
	@version("3.1.2")
	record LookupPolicyGroupFailed {
		string policyGroupId;
 		array<com.x.core.v1.Error> errors;
  	}

	record CustomCategory {
		long id;
 		string name;
 		int order;
 		array<CustomCategory> childCategories;
  	}

	record MarketplaceStore {
		string name;
 		union{null,array<CustomCategory>} categories = null;
  	}

	@topics("/com.x.marketplace.v3/StoreLookup/LookupStoreSucceeded")
	@version("3.1.2")
	record LookupStoreSucceeded {
		MarketplaceStore store;
 		LookupStore request;
  	}

	record SupportedHandlingTime {
		int maxHandlingTime;
 		string description;
  	}

	enum RefundMethod {
		MONEY_BACK,
		EXCHANGE_ONLY,
		STORE_CREDIT
	}

	record ReturnPolicy {
		union{null,string} description = null;
 		union{null,boolean} returnAccepted = null;
 		union{null,boolean} buyerPaysReturnShipping = null;
 		union{null,int} returnByDays = null;
 		union{null,RefundMethod} refundMethod = null;
  	}

	record OfferDetails {
		string id;
 		//A string representing the date and time as defined by RFC 3339's 'date-time' format with 'time-secfrac' defined.
		union{null,string} startTime = null;
 		//A string representing the date and time as defined by RFC 3339's 'date-time' format with 'time-secfrac' defined.
		union{null,string} endTime = null;
 		union{null,string} title = null;
 		union{null,string} subTitle = null;
 		union{null,boolean} giftWrapAvailable = null;
 		union{null,array<string>} marketCategories = null;
 		union{null,PaymentPolicy} payment = null;
 		union{null,ShippingPolicy} shipping = null;
 		union{null,ReturnPolicy} returnPolicy = null;
 		array<Sku> skus;
 		union{null,array<string>} customCategories = null;
  	}

	@topics("/com.x.marketplace.v3/PublishedOfferRevision/RevisePublishedOfferFailed /com.x.marketplace.v3/PublishedOfferRevisionWithProductData/RevisePublishedOfferFailed")
	@version("3.1.2")
	record RevisePublishedOfferFailed {
		OfferDetails updatedOffer;
 		array<com.x.core.v1.Error> errors;
 		union{null,string} policyGroupId = null;
  	}

	@topics("/com.x.marketplace.v3/PublishedOfferRevision/RevisePublishedOffer")
	@version("3.1.2")
	record RevisePublishedOffer {
		OfferDetails update;
 		union{null,string} policyGroupId = null;
  	}

	@topics("/com.x.marketplace.v3/OfferPublicationWithProductData/PublishOfferFailed /com.x.marketplace.v3/OfferPublication/PublishOfferFailed")
	@version("3.1.2")
	record PublishOfferFailed {
		OfferDetails offer;
 		union{null,string} policyGroupId = null;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.marketplace.v3/OfferPublication/PublishOffer")
	@version("3.1.2")
	record PublishOffer {
		OfferDetails offer;
 		union{null,string} policyGroupId = null;
  	}

	record OfferDetailsWithProductData {
		OfferDetails offerDetails;
 		com.x.pim.v1.Product product;
  	}

	@topics("/com.x.marketplace.v3/PublishedOfferRevisionWithProductData/RevisePublishedOfferWithProductData")
	@version("3.1.2")
	record RevisePublishedOfferWithProductData {
		OfferDetailsWithProductData update;
 		union{null,string} policyGroupId = null;
  	}

	@topics("/com.x.marketplace.v3/OfferPublicationWithProductData/PublishOfferWithProductData")
	@version("3.1.2")
	record PublishOfferWithProductData {
		OfferDetailsWithProductData offer;
 		union{null,string} policyGroupId = null;
  	}

	record PolicyGroupData {
		string name;
 		union{null,string} siteCode = null;
 		union{null,PaymentPolicy} paymentPolicy = null;
 		union{null,ShippingPolicy} shippingPolicy = null;
 		union{null,ReturnPolicy} returnPolicy = null;
 		string xAccountId;
  	}

	@topics("/com.x.marketplace.v3/PolicyGroupCreation/CreatePolicyGroupFailed")
	@version("3.1.2")
	record CreatePolicyGroupFailed {
		PolicyGroupData p;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.marketplace.v3/PolicyGroupCreation/CreatePolicyGroup")
	@version("3.1.2")
	record CreatePolicyGroup {
		PolicyGroupData p;
  	}

	record PolicyGroup {
		string name;
 		union{null,string} siteCode = null;
 		union{null,PaymentPolicy} paymentPolicy = null;
 		union{null,ShippingPolicy} shippingPolicy = null;
 		union{null,ReturnPolicy} returnPolicy = null;
 		string xAccountId;
 		string id;
  	}

	@topics("/com.x.marketplace.v3/PolicyGroupUpdate/UpdatePolicyGroupFailed")
	@version("3.1.2")
	record UpdatePolicyGroupFailed {
		PolicyGroup p;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.marketplace.v3/PolicyGroupUpdate/UpdatePolicyGroupSucceeded")
	@version("3.1.2")
	record UpdatePolicyGroupSucceeded {
		PolicyGroup p;
  	}

	@topics("/com.x.marketplace.v3/PolicyGroupUpdate/UpdatePolicyGroup")
	@version("3.1.2")
	record UpdatePolicyGroup {
		PolicyGroup p;
  	}

	@topics("/com.x.marketplace.v3/PolicyGroupCreation/CreatePolicyGroupSucceeded")
	@version("3.1.2")
	record CreatePolicyGroupSucceeded {
		PolicyGroup p;
  	}

	@topics("/com.x.marketplace.v3/PolicyGroupLookup/LookupPolicyGroupSucceeded")
	@version("3.1.2")
	record LookupPolicyGroupSucceeded {
		PolicyGroup p;
  	}

	record EbayPolicyGroup {
		string name;
 		union{null,string} siteCode = null;
 		union{null,PaymentPolicy} paymentPolicy = null;
 		union{null,ShippingPolicy} shippingPolicy = null;
 		union{null,ReturnPolicy} returnPolicy = null;
 		string xAccountId;
 		union{null,string} location = null;
 		union{null,string} postalCode = null;
 		string countryCode;
 		union{null,string} payPalEmailAddress = null;
 		union{null,int} handlingTime = null;
 		union{null,boolean} useTaxTable = null;
 		string id;
  	}

	@topics("/com.x.marketplace.v3/PolicyGroupUpdate.Ebay/UpdateEbayPolicyGroupFailed")
	@version("3.1.2")
	record UpdateEbayPolicyGroupFailed {
		EbayPolicyGroup p;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.marketplace.v3/PolicyGroupUpdate.Ebay/UpdateEbayPolicyGroupSucceeded")
	@version("3.1.2")
	record UpdateEbayPolicyGroupSucceeded {
		EbayPolicyGroup p;
  	}

	@topics("/com.x.marketplace.v3/PolicyGroupUpdate.Ebay/UpdateEbayPolicyGroup")
	@version("3.1.2")
	record UpdateEbayPolicyGroup {
		EbayPolicyGroup p;
  	}

	@topics("/com.x.marketplace.v3/PolicyGroupCreation.Ebay/CreateEbayPolicyGroupSucceeded")
	@version("3.1.2")
	record CreateEbayPolicyGroupSucceeded {
		EbayPolicyGroup p;
  	}

	@topics("/com.x.marketplace.v3/PolicyGroupLookup.Ebay/LookupEbayPolicyGroupSucceeded")
	@version("3.1.2")
	record LookupEbayPolicyGroupSucceeded {
		EbayPolicyGroup p;
  	}

	record EbayPolicyGroupData {
		string name;
 		union{null,string} siteCode = null;
 		union{null,PaymentPolicy} paymentPolicy = null;
 		union{null,ShippingPolicy} shippingPolicy = null;
 		union{null,ReturnPolicy} returnPolicy = null;
 		string xAccountId;
 		union{null,string} location = null;
 		union{null,string} postalCode = null;
 		string countryCode;
 		union{null,string} payPalEmailAddress = null;
 		union{null,int} handlingTime = null;
 		union{null,boolean} useTaxTable = null;
  	}

	@topics("/com.x.marketplace.v3/PolicyGroupCreation.Ebay/CreateEbayPolicyGroupFailed")
	@version("3.1.2")
	record CreateEbayPolicyGroupFailed {
		EbayPolicyGroupData p;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.marketplace.v3/PolicyGroupCreation.Ebay/CreateEbayPolicyGroup")
	@version("3.1.2")
	record CreateEbayPolicyGroup {
		EbayPolicyGroupData p;
  	}

	record EbayOfferDetails {
		string id;
 		//A string representing the date and time as defined by RFC 3339's 'date-time' format with 'time-secfrac' defined.
		union{null,string} startTime = null;
 		//A string representing the date and time as defined by RFC 3339's 'date-time' format with 'time-secfrac' defined.
		union{null,string} endTime = null;
 		union{null,string} title = null;
 		union{null,string} subTitle = null;
 		union{null,boolean} giftWrapAvailable = null;
 		union{null,array<string>} marketCategories = null;
 		union{null,PaymentPolicy} payment = null;
 		union{null,ShippingPolicy} shipping = null;
 		union{null,ReturnPolicy} returnPolicy = null;
 		array<Sku> skus;
 		union{null,array<string>} customCategories = null;
 		string listingFormat;
 		string duration;
 		string countryCode;
 		union{null,com.x.core.v1.CurrencyAmount} buyItNowPrice = null;
 		union{null,com.x.core.v1.CurrencyAmount} reservePrice = null;
 		union{null,string} payPalEmailAddress = null;
 		union{null,int} handlingTime = null;
 		union{null,boolean} useTaxTable = null;
 		union{null,string} postalCode = null;
 		union{null,string} location = null;
 		union{null,string} imageVariationName = null;
  	}

	@topics("/com.x.marketplace.v3/PublishedOfferRevision.Ebay/ReviseEbayPublishedOfferFailed /com.x.marketplace.v3/PublishedOfferRevisionWithProductData.Ebay/ReviseEbayPublishedOfferFailed")
	@version("3.1.2")
	record ReviseEbayPublishedOfferFailed {
		EbayOfferDetails update;
 		union{null,string} policyGroupId = null;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.marketplace.v3/PublishedOfferRevision.Ebay/ReviseEbayPublishedOffer")
	@version("3.1.2")
	record ReviseEbayPublishedOffer {
		EbayOfferDetails update;
 		union{null,string} policyGroupId = null;
  	}

	@topics("/com.x.marketplace.v3/OfferPublicationWithProductData.Ebay/PublishEbayOfferFailed /com.x.marketplace.v3/OfferPublication.Ebay/PublishEbayOfferFailed")
	@version("3.1.2")
	record PublishEbayOfferFailed {
		EbayOfferDetails offer;
 		union{null,string} policyGroupId = null;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.marketplace.v3/OfferPublication.Ebay/PublishEbayOffer")
	@version("3.1.2")
	record PublishEbayOffer {
		EbayOfferDetails offer;
 		union{null,string} policyGroupId = null;
  	}

	record EbayOfferDetailsWithProductData {
		EbayOfferDetails offerDetails;
 		com.x.pim.v1.Product product;
  	}

	@topics("/com.x.marketplace.v3/PublishedOfferRevisionWithProductData.Ebay/ReviseEbayPublishedOfferWithProductData")
	@version("3.1.2")
	record ReviseEbayPublishedOfferWithProductData {
		EbayOfferDetailsWithProductData update;
 		union{null,string} policyGroupId = null;
  	}

	@topics("/com.x.marketplace.v3/OfferPublicationWithProductData.Ebay/PublishEbayOfferWithProductData")
	@version("3.1.2")
	record PublishEbayOfferWithProductData {
		EbayOfferDetailsWithProductData offer;
 		union{null,string} policyGroupId = null;
  	}

	record SupportedReturnPolicy {
		boolean returnsAccepted;
 		array<RefundMethod> method;
 		int maxReturnByDays;
  	}

	record SiteMetadata {
		string siteCode;
 		string siteName;
 		union{null,array<SupportedHandlingTime>} handlingTimes = null;
 		union{null,SupportedReturnPolicy} policy = null;
 		union{null,array<SupportedShippingService>} services = null;
 		array<string> currencies;
 		array<com.x.core.v1.PaymentMethod> methods;
 		array<SupportedCountry> countries;
 		array<Environment> environments;
 		string marketplace;
  	}

	@topics("/com.x.marketplace.v3/MarketplaceSetup/LookupSiteMetadataSucceeded")
	@version("3.1.2")
	record LookupSiteMetadataSucceeded {
		array<SiteMetadata> siteMetadata;
 		union{null,string} environmentName = null;
  	}

	enum OfferState {
		NEW,
		PUBLISHED,
		SUSPENDED
	}

	record OfferChannelData {
		OfferState offerState;
 		string channelAssignedOfferId;
 		union{null,string} channelOfferUrl = null;
 		union{null,string} channelStatus = null;
  	}

	record Offer {
		OfferChannelData channelData;
 		OfferDetails offerDetails;
  	}

	@topics("/com.x.marketplace.v3/OfferSearch/SearchOffersSucceeded")
	@version("3.1.2")
	record SearchOffersSucceeded {
		array<Offer> offers;
 		SearchOffers request;
  	}

	@topics("/com.x.marketplace.v3/PublishedOfferRevision/RevisePublishedOfferSucceeded /com.x.marketplace.v3/PublishedOfferRevisionWithProductData/RevisePublishedOfferSucceeded")
	@version("3.1.2")
	record RevisePublishedOfferSucceeded {
		Offer updatedOffer;
 		union{null,string} policyGroupId = null;
  	}

	@topics("/com.x.marketplace.v3/OfferPublicationWithProductData/PublishOfferSucceeded /com.x.marketplace.v3/OfferPublication/PublishOfferSucceeded")
	@version("3.1.2")
	record PublishOfferSucceeded {
		Offer offer;
 		union{null,string} policyGroupId = null;
  	}

	@topics("/com.x.marketplace.v3/OfferSearch.Ebay/SearchEbayOffersSucceeded")
	@version("3.1.2")
	record SearchEbayOffersSucceeded {
		array<Offer> offers;
 		SearchOffers request;
  	}

	record EbayOffer {
		OfferChannelData channelData;
 		EbayOfferDetails offerDetails;
  	}

	@topics("/com.x.marketplace.v3/PublishedOfferRevision.Ebay/ReviseEbayPublishedOfferSucceeded /com.x.marketplace.v3/PublishedOfferRevisionWithProductData.Ebay/ReviseEbayPublishedOfferSucceeded")
	@version("3.1.2")
	record ReviseEbayPublishedOfferSucceeded {
		EbayOffer updatedOffer;
 		union{null,string} policyGroupId = null;
  	}

	@topics("/com.x.marketplace.v3/OfferPublicationWithProductData.Ebay/PublishEbayOfferSucceeded /com.x.marketplace.v3/OfferPublication.Ebay/PublishEbayOfferSucceeded")
	@version("3.1.2")
	record PublishEbayOfferSucceeded {
		EbayOffer offer;
 		union{null,string} policyGroupId = null;
  	}

	@topics("/com.x.marketplace.v3/MarketplaceSetup/LookupSiteMetadataFailed")
	@version("3.1.2")
	record LookupSiteMetadataFailed {
		array<string> siteCode;
 		union{null,string} environmentName = null;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.marketplace.v3/MarketplaceSetup/GetAllAvailableChannelsSucceeded")
	@version("3.1.2")
	record GetAllAvailableChannelsSucceeded {
		string channelName;
 		string channelProviderName;
  	}

	@topics("/com.x.marketplace.v3/MarketplaceSetup/GetAllSitesFailed")
	@version("3.1.2")
	record GetAllSitesFailed {
		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.marketplace.v3/MarketplaceSetup/SearchCategories")
	@version("3.1.2")
	record SearchCategories {
		union{null,string} siteCode = null;
 		union{null,string} xProductTypeId = null;
 		union{null,string} environmentName = null;
  	}


}