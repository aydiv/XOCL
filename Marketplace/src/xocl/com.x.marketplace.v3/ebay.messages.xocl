 package com.x.marketplace.v3{  
 	import com.x.core.v1.*
 	import com.x.marketplace.v3.*
	
	record EbayOfferDetails extends EbayOfferDetailsWithoutSKU{
		array<Sku> skus;
	}
	
	record EbayOfferDetailsWithoutSKU extends OfferDetailsWithoutSKU{
		string listingFormat;
		string duration;
        string countryCode;
        //these are only applicable for auction
		CurrencyAmount? buyItNowPrice;
		CurrencyAmount? reservePrice;
		
		string? payPalEmailAddress;
		int? handlingTime;
		boolean? useTaxTable;

		// Product Details (additional field)
		string? postalCode;
		string? location;

		string? imageVariationName;	
	}
	
	record EbayOfferDetailsWithProductData extends EbayOfferDetailsWithoutSKU{
		ProductDetails product;
	    array<Variation> variations;
	}

	record EbayOffer {
		OfferChannelData channelData;
		EbayOfferDetails offerDetails;	
	}
	
	record EbayPolicyGroupData extends PolicyGroupData {
		string? location;
		string? postalCode;
		string countryCode;
		string? payPalEmailAddress;
		int? handlingTime;
		boolean? useTaxTable;
	}
	
	record EbayPolicyGroup extends EbayPolicyGroupData{
		string id;
	}	

	record PublishEbayOffer {
		EbayOfferDetails offer; 
		string? policyGroupId;
	}
	
	record PublishEbayOfferWithProductData {
		EbayOfferDetailsWithProductData offer; 
		string? policyGroupId;
	}
	
	record PublishEbayOfferSucceeded { //Does not map 1:1 with request message - need to model this
		EbayOffer offer;
		string? policyGroupId;
	}

	record PublishEbayOfferFailed {
		EbayOfferPublicationError offerError;
		string? policyGroupId;
	}
    record EbayOfferPublicationError {
		EbayOffer offer;
		array<Error> errors;
	}
	
    record EbayOfferUpdateError {
		EbayOffer offer;
		array<Error> errors;
	}
	
	record ReviseEbayPublishedOffer {
		EbayOfferDetails update; //must have channelOfferId
		string? policyGroupId;
	}
	record ReviseEbayPublishedOfferWithProductData {
		EbayOfferDetailsWithProductData update; //must have channelOfferId
		string? policyGroupId;
	}
	record ReviseEbayPublishedOfferSucceeded {
		EbayOffer updatedOffer; 
		string? policyGroupId;
	}
	
	record ReviseEbayPublishedOfferFailed {
		EbayOfferUpdateError errors;
		string? policyGroupId;
	}

	record LookupEbayPolicyGroupSucceeded {
		PolicyGroup p;
	}
	
	record CreateEbayPolicyGroup {
		EbayPolicyGroupData p; 
	}

	record CreateEbayPolicyGroupSucceeded {   
		EbayPolicyGroup p; //id is filled in
	}
	
	record CreateEbayPolicyGroupFailed {
		EbayPolicyGroupData p;
		array<Error> errors;
	}
	
	record UpdateEbayPolicyGroup {
		EbayPolicyGroup p; //idd must be filled in
	}

	record UpdateEbayPolicyGroupSucceeded {
		EbayPolicyGroup p;
	}

	record UpdateEbayPolicyGroupFailed {
		EbayPolicyGroup p;
		array<Error> errors;
	}
	
	record LookupStore {
		string? xAccountId;
		string? userMarketplaceId;
		string? siteCode;
		string? environmentName;
	}

	record LookupStoreSucceeded {
		MarketplaceStore store;
		LookupStore request;
	}

	record LookupStoreFailed {
		LookupStore request;
		array<Error> errors;
	}
    
    record SearchEbayOffersSucceeded{	
		array<Offer> offers;
		SearchOffers request;
	}
	
}