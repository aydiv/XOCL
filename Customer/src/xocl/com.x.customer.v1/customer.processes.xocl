package com.x.customer.v1{
	import com.x.customer.v1.*
	
	//The email variant of this process must honor whether the customer is opted in or out of email marketing
	process CustomerSearch<Email, NameAndId>
	{
		summary "Searches and returns customer information for multiple customers."
		description "A CustomerConsumer searches for customers by email or name, customer system ID, or modification date. The CustomerManager returns the results." // ??need more details 

		roles
			{
				CustomerConsumer "Searches the customer management system."
				CustomerManager "Returns a list of customers and their information based on the search criteria."
			}
	
		workflow
		{
			summary "Searches and returns customer information."
			description "Searches for customers by email or customer name and system ID and returns customer information."
			transaction SearchCustomer<Email, NameAndId>
			{
				roles(CustomerConsumer,CustomerManager)
			}
		}
	}
	
	// lookup a single customer
	process CustomerLookup {
		summary "Searches for a single customer."
		description "A CustomerConsumer looks up a single customer and CustomerManager returns the results."
		
		roles
			{
				CustomerConsumer "Searches the customer management system for a specific customer."
				CustomerManager "Returns the customer and their information based on the search criteria."
			}
	    workflow {
			summary "Search for a single customer."
			description "A CustomerConsumer looks up a single customer and CustomerManager returns the results."
			transaction LookupCustomer {
				roles(CustomerConsumer, CustomerManager)
			}
		}		
	}
	
	
	//Implementer should assume that, if creating the customer, that he/she is opted-out for marketing purposes. 
	//Implementer must check to see if the customer is already there before deciding to create or update  
	process CustomerUpsert
	{
		summary "Add a customer or update existing customer information."
		description "Adds a customer or updates information about an existing customer in the customer management system. To determine whether to create a new customer or update information for an existing customer, you MUST check to see if the customer already exists. Also when creating a new customer, assume they have opted-out of email marketing messages."
		roles 
			{
				CustomerConsumer "Searches for a customer to check if they already exist."
				CustomerManager "Adds a new customer record or updates information about an existing customer in the customer management system."
				CustomerObserver "Recieves either a customer added or customer updated notification."
			}
	}
	
	workflow CustomerUpsert implements CustomerUpsert
	{
		summary "Either adds or updates customer information."
		description "Searches for a customer and either adds a new customer or updates the information of an existing customer."
		transaction UpsertCustomer
		{
				roles(CustomerConsumer,CustomerManager)
		}
		workflow CustomerCreatedOrUpdated
		{
			roles(CustomerManager, CustomerObserver)
		}
	}

	process CustomerCreatedOrUpdated{
			roles 
			{
				CustomerManager "Adds a new customer record or updates information about an existing customer in the customer management system."
				CustomerObserver "Recieves either a customer added or customer updated notification."
			}
	}

	workflow CustomerCreatedOrUpdated implements CustomerCreatedOrUpdated
	{
		summary "Sends information to an observer that a customer was created or updated"
		description "Sends information to an observer that a customer was created or updated"
		one{
			transaction CustomerCreated	
			{
				roles(CustomerManager,CustomerObserver)
			}
			transaction CustomerUpdated	
			{
				roles(CustomerManager,CustomerObserver)
			}
		}
	}

		
}