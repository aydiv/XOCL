package com.x.customer.v1{
	import com.x.customer.v1.*
	
	//The email variant of this process must honor whether the customer is opted in or out of email marketing
	process CustomerSearch<Email, NameAndId>
	{
		summary "Searches and returns customer information for multiple customers."
		description "A CustomerConsumer searches for customers by email or name, customer system ID, or modification date. The CustomerManager returns the results." 

		roles
			{
				CustomerConsumer "Searches for customers in the customer management system."
				CustomerManager "Returns a list of customers and their information based on the search criteria."
			}
	
		workflow
		{
			summary "Searches and returns customer information."
			description "Searches for customers by email or customer name and system ID and returns customer information."

			transaction SearchCustomer<Email, NameAndId>
			{
				roles(CustomerConsumer,CustomerManager)
			}
		}
	}
	
	process CustomerLookup {
		summary "Looks up a single customer."
		description "A CustomerConsumer looks up a single customer and CustomerManager returns the results."
		
		roles
			{
				CustomerConsumer "Searches the customer management system for a specific customer."
				CustomerManager "Returns the customer and their information based on the search criteria."
			}
	    workflow {
			summary "Search for a single customer."
			description "A CustomerConsumer looks up a single customer and CustomerManager returns the results."

			transaction LookupCustomer {
				roles(CustomerConsumer, CustomerManager)
			}
		}		
	}
	
	process CustomerUpsert
	{
		summary "Adds a customer or updates existing customer information."
		description "Adds a customer or updates information about an existing customer in the customer management system. To determine whether to create a new customer or update information for an existing customer, you MUST check to see if the customer already exists. Also when creating a new customer, assume they have opted-out of email marketing messages."

		roles 
			{
				CustomerConsumer "Requests a customer be added or customer information be updated."
				CustomerManager "Adds a new customer record or updates information about an existing customer in the customer management system and notifies observers."
				CustomerObserver "Receives either a customer added or customer updated notification."
			}
	}
	
	workflow CustomerUpsert implements CustomerUpsert
	{
		summary "Adds a customer or updates an existing customer's data."
		description "Searches for a customer and either adds a new customer or updates the information of an existing customer."

		transaction UpsertCustomer
		{
				roles(CustomerConsumer,CustomerManager)
		}
		workflow CustomerCreatedOrUpdated
		{
			roles(CustomerManager, CustomerObserver)
		}
	}

	process CustomerCreatedOrUpdated{
		summary "Notification that a customer was added or that customer data was updated."
		description "The CustomerManager returns the data in the original request and notifies observers of the action taken."
			roles 
			{
				CustomerManager "Returns the data in the original request and notifies observers."
				CustomerObserver "Receives either a customer added or customer updated notification."
			}
	}

	workflow CustomerCreatedOrUpdated implements CustomerCreatedOrUpdated
	{
		summary "Notification that a customer was added or that customer data was updated."
		description "Sends information to an observer that a customer was created or updated."

		one{
			transaction CustomerCreated	
			{
				roles(CustomerManager,CustomerObserver)
			}
			transaction CustomerUpdated	
			{
				roles(CustomerManager,CustomerObserver)
			}
		}
	}

		
}