/*
 * This file contains a sample of the X.commerce Open Commerce Language (XOCL).
 * By convention, contracts for a domain reside in the file <domain>.Contracts.xocl
 */

package com.x.example.v1
{	
	import com.x.example.v1.*
	
	/*
	 * A contract is implemented by a capability.
	 * A contract has a description and a set of process roles.
	 */
    contract OutsourceOrderManager 
    {
    	description "A company that outsources all order fulfillment functions"
    	
    	/*
    	 * The roles collectivley define the capability's responsibilities.
    	 */
    	roles
    	{
	        OrderFulfillment.OrderManager
	        OrderFulfillment.OfferManager
	    }
    }
    
    /*
     * A contract can extend one or more other contracts.
     * Extending a contract causes its roles to be added to the extender.
     */
    contract InHouseOrderManager extends OutsourceOrderManager
    {
    	description "A company that performs all order fulfillment functions"
    	roles
    	{
    		/*
    		 * A role may be qualified by a variant, meaning that the responsiblity is to 
    		 *   implement the specified role in the specified variant of the process.
    		 */
	        OrderFulfillment.OrderObserver<WithCreationMetadata>
	        OrderFulfillment.InventoryManager<WithAuthorization>
	        OrderFulfillment.WarehouseManager<WithAuthorization>
	        
	        /*
	         * A contract may span multiple processes, and may optionally specify the 
	         *   workflow that must be supported if more than one workflow implements the 
	         *   specified process.
	         */
	        OrderShipment.ShippingManager(OrderDropShipment)
        }
    }
}