package com.x.inventory.v1
{
	import com.x.inventory.v1.*
	
	process StockItemLookup 
	{
		description "The inventory consumer queries inventory levels and locations. This process is read-only. Stock item properties are not altered by this process."	
			
		roles(InventoryConsumer, InventoryManager)
		
		workflow 
		{
			description "The inventory consumer queries inventory levels and locations."
			transaction LookupStockItem
			{
				roles(InventoryConsumer, InventoryManager)
			}
		}
	}
	
    process StockItemUpdate(StockItem stockItem)
    {
		description "The stock item consumer submits stock item updates to the inventory manager."
		
		roles(StockItemConsumer, InventoryManager, InventoryObserver)
		
		preconditions(exists(stockItem))
	
		workflow
		{
			description "Optionally, the stock item consumer tells the inventory manager to update properties for one or more stock items. The inventory manager informs the inventory observer that stock item was updated (updates could occur through the messaging system or via the user interface), and, optionally, if an item is out of stock. The transactions defined in this workflow do not need to occur in a specific sequence."
			any
			{
				// Stock item consumer tells inventory manager to update stock item
				transaction UpdateStockItem
				{
				   	roles(StockItemConsumer, InventoryManager)
				}
			}
			
			// Inventory manager informs inventory observer that stock item was updated
			transaction StockItemUpdated
			{
				roles(InventoryManager, InventoryObserver)
			}

			any
			{
				// Inventory manager informs Inventory observer that item has gone out of stock
				transaction OutOfStock  
				{
					roles(InventoryManager, InventoryObserver)
				}
			}
		}
		
		postconditions
		{
			success(exists(stockItem))
		}
	}
}