/**
 * This is a autogenerated using the com.x.ocl:xocl-maven-plugin:1.4.6 maven plugin.
 * The contents are generated from the following XOCL files:
 *            inventory.version.xocl
 *            inventory.transactions.xocl
 *            inventory.contracts.xocl
 *            inventory.processes.xocl
 *            inventory.messages.xocl
 * DO NOT EDIT THIS FILE DIRECTLY
 */
@namespace("com.x.inventory.v1")
@status("workingdraft")
protocol com_x_inventory_v1 {
	import idl "com.x.core.v1.avdl";

	@topic("/com.x.inventory.v1/StockItemLookup/LookupStockItem")
	@version("1.0.1")
	record LookupStockItem {
		array<string> skus;
  	}

	enum InventorySnapshotReason {
		CYCLE_COUNT,
		DAMAGED_INVENTORY,
		LIQUIDATION
	}

	enum InventoryCondition {
		SELLABLE,
		UNSELLABLE
	}

	record StockItemData {
		string sku;
 		int unitQuantity;
 		string stockingUOM;
 		InventoryCondition status;
  	}

	@topic("/com.x.inventory.v1/StockItemUpdate/UpdateStockItemDelta")
	@version("1.0.1")
	record UpdateStockItemDelta {
		StockItemData inventoryChange;
 		//A string representing the date and time as defined by RFC 3339's 'date-time' format with 'time-secfrac' defined.
		string date;
 		string warehouseId;
  	}

	@topic("/com.x.inventory.v1/StockItemUpdate/UpdateStockItemDeltaFailed")
	@version("1.0.1")
	record UpdateStockItemDeltaFailed {
		UpdateStockItemDelta request;
 		array<com.x.core.v1.Error> errors;
  	}

	@topic("/com.x.inventory.v1/StockItemUpdate/UpdateStockItemDeltaSucceeded")
	@version("1.0.1")
	record UpdateStockItemDeltaSucceeded {
		UpdateStockItemDelta request;
  	}

	@topic("/com.x.inventory.v1/StockItemUpdate/UpdateStockItemSnapshot")
	@version("1.0.1")
	record UpdateStockItemSnapshot {
		StockItemData inventorySnapshot;
 		//A string representing the date and time as defined by RFC 3339's 'date-time' format with 'time-secfrac' defined.
		string snapshotDate;
 		InventorySnapshotReason snapshotReason;
 		string locationName;
  	}

	@topic("/com.x.inventory.v1/StockItemUpdate/UpdateStockItemSnapshotFailed")
	@version("1.0.1")
	record UpdateStockItemSnapshotFailed {
		UpdateStockItemSnapshot request;
 		array<com.x.core.v1.Error> errors;
  	}

	@topic("/com.x.inventory.v1/StockItemUpdate/UpdateStockItemSnapshotSucceeded")
	@version("1.0.1")
	record UpdateStockItemSnapshotSucceeded {
		UpdateStockItemSnapshot request;
  	}

	record InventoryLookupError {
		union{null,string} sku = null;
 		array<com.x.core.v1.Error> errors;
  	}

	@topic("/com.x.inventory.v1/StockItemLookup/LookupStockItemFailed")
	@version("1.0.1")
	record LookupStockItemFailed {
		array<InventoryLookupError> errors;
  	}

	record StockItem {
		string sku;
 		int quantity;
 		string locationName;
  	}

	@topic("/com.x.inventory.v1/StockItemUpdate/OutOfStock")
	@version("1.0.1")
	record OutOfStock {
		StockItem stockItem;
  	}

	@topic("/com.x.inventory.v1/StockItemUpdate/StockItemUpdated")
	@version("1.0.1")
	record StockItemUpdated {
		array<StockItem> stockItems;
  	}

	record InventoryError {
		union{null,StockItem} stockItem = null;
 		array<com.x.core.v1.Error> errors;
  	}

	@topic("/com.x.inventory.v1/StockItemLookup/LookupStockItemSucceeded")
	@version("1.0.1")
	record LookupStockItemSucceeded {
		array<StockItem> stockItems;
  	}


}