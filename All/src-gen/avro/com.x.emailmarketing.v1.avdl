/**
 * This is a autogenerated using the com.x.ocl:xocl-maven-plugin:1.4.10 maven plugin.
 * The contents are generated from the following XOCL files:
 *            emailmarketing.contracts.xocl
 *            emailmarketing.processes.xocl
 *            emailmarketing.messages.xocl
 *            emailmarketing.version.xocl
 *            emailmarketing.transactions.xocl
 * DO NOT EDIT THIS FILE DIRECTLY
 */
@namespace("com.x.emailmarketing.v1")
@status("earlydraft")
protocol com_x_emailmarketing_v1 {
	import idl "com.x.customer.v1.avdl";
	import idl "com.x.core.v1.avdl";

	record ContactSearchFilter {
		union{null,string} email = null;
 		union{null,string} contactId = null;
 		union{null,string} listId = null;
 		union{null,string} campaignId = null;
 		union{null,string} accountId = null;
  	}

	@topics("/com.x.emailmarketing.v1/DeleteContactList/DeleteContactList")
	@version("1.0.1")
	record DeleteContactList {
		string id;
  	}

	@topics("/com.x.emailmarketing.v1/DeleteContactList/DeleteContactListFailed")
	@version("1.0.1")
	record DeleteContactListFailed {
		DeleteContactList request;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.emailmarketing.v1/AddCustomersToContactList/AddCustomersToContactList")
	@version("1.0.1")
	record AddCustomersToContactList {
		string listId;
 		array<union{string, com.x.core.v1.EntityId}> customerIds;
  	}

	@topics("/com.x.emailmarketing.v1/AddCustomersToContactList/AddCustomersToContactListFailed")
	@version("1.0.1")
	record AddCustomersToContactListFailed {
		AddCustomersToContactList request;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.emailmarketing.v1/AddCustomersToContactList/AddCustomersToContactListSucceeded")
	@version("1.0.1")
	record AddCustomersToContactListSucceeded {
		AddCustomersToContactList request;
  	}

	@topics("/com.x.emailmarketing.v1/EmailCampaignDeletion/DeleteEmailCampaignFailed")
	@version("1.0.1")
	record DeleteEmailCampaignFailed {
		string campaignId;
 		array<com.x.core.v1.Error> errors;
  	}

	record LinkClickEvent {
		string campaignId;
 		string contactId;
 		//A string representing the date and time as defined by RFC 3339's 'date-time' format with 'time-secfrac' defined.
		string time;
 		int webPageViews;
 		union{null,string} orderId = null;
 		union{null,com.x.core.v1.CurrencyAmount} salesValue = null;
  	}

	record SocialShareEvent {
		string campaignId;
 		string contactId;
 		//A string representing the date and time as defined by RFC 3339's 'date-time' format with 'time-secfrac' defined.
		string time;
 		string socialNetwork;
 		int networkViews;
  	}

	@topics("/com.x.emailmarketing.v1/EmailCampaignDeletion/DeleteEmailCampaign")
	@version("1.0.1")
	record DeleteEmailCampaign {
		string campaignId;
  	}

	@topics("/com.x.emailmarketing.v1/EmailCampaignDeletion/DeleteEmailCampaignSucceeded")
	@version("1.0.1")
	record DeleteEmailCampaignSucceeded {
		DeleteEmailCampaign request;
  	}

	@topics("/com.x.emailmarketing.v1/RemoveCustomersFromContactList/RemoveCustomersFromContactList")
	@version("1.0.1")
	record RemoveCustomersFromContactList {
		string listId;
 		array<union{string, com.x.core.v1.EntityId}> customerIds;
  	}

	@topics("/com.x.emailmarketing.v1/RemoveCustomersFromContactList/RemoveCustomersFromContactListFailed")
	@version("1.0.1")
	record RemoveCustomersFromContactListFailed {
		RemoveCustomersFromContactList request;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.emailmarketing.v1/RemoveCustomersFromContactList/RemoveCustomersFromContactListSucceeded")
	@version("1.0.1")
	record RemoveCustomersFromContactListSucceeded {
		RemoveCustomersFromContactList request;
  	}

	enum SegmentScope {
		GLOBAL,
		LIST
	}

	record GetContactStatistic {
		string contactId;
 		string campaignId;
  	}

	enum ListVisibilityType {
		PRIVATE,
		CONTACT
	}

	record ContactListData {
		string name;
 		string description;
 		string accountId;
 		boolean notifyOnAdd = false;
 		union{null,string} notifyOnAddMessageId = null;
 		ListVisibilityType visibility;
  	}

	@topics("/com.x.emailmarketing.v1/CreateContactList/CreateContactList")
	@version("1.0.1")
	record CreateContactList {
		ContactListData contactList;
  	}

	@topics("/com.x.emailmarketing.v1/CreateContactList/CreateContactListFailed")
	@version("1.0.1")
	record CreateContactListFailed {
		array<com.x.core.v1.Error> errors;
 		CreateContactList request;
  	}

	record ContactList {
		string name;
 		string description;
 		string accountId;
 		boolean notifyOnAdd = false;
 		union{null,string} notifyOnAddMessageId = null;
 		ListVisibilityType visibility;
 		string listId;
  	}

	@topics("/com.x.emailmarketing.v1/UpdateContactList/UpdateContactListSucceeded")
	@version("1.0.1")
	record UpdateContactListSucceeded {
		ContactList contactList;
  	}

	@topics("/com.x.emailmarketing.v1/UpdateContactList/UpdateContactList")
	@version("1.0.1")
	record UpdateContactList {
		ContactList contactList;
  	}

	@topics("/com.x.emailmarketing.v1/UpdateContactList/UpdateContactListFailed")
	@version("1.0.1")
	record UpdateContactListFailed {
		array<com.x.core.v1.Error> errors;
 		UpdateContactList request;
  	}

	@topics("/com.x.emailmarketing.v1/CreateContactList/CreateContactListSucceeded")
	@version("1.0.1")
	record CreateContactListSucceeded {
		ContactList contactList;
  	}

	record SpamCheckRule {
		double score;
 		string name;
 		union{null,string} description = null;
  	}

	record SpamCheckScore {
		string messageId;
 		double totalScore;
 		array<SpamCheckRule> triggeredRules;
  	}

	record AccountData {
		string email;
 		string emailName;
 		union{null,string} parentAccountId = null;
  	}

	record CampaignSearchFilter {
		union{null,string} campaignId = null;
 		union{null,string} campaignName = null;
 		union{null,string} messageId = null;
 		union{null,string} listId = null;
 		union{null,string} accountId = null;
  	}

	@topics("/com.x.emailmarketing.v1/CampaignSearch/SearchCampaigns")
	@version("1.0.1")
	record SearchCampaigns {
		CampaignSearchFilter filter;
  	}

	@topics("/com.x.emailmarketing.v1/CampaignSearch/SearchCampaignsFailed")
	@version("1.0.1")
	record SearchCampaignsFailed {
		SearchCampaigns request;
 		array<com.x.core.v1.Error> errors;
  	}

	record ListSearchFilter {
		union{null,string} listId = null;
 		union{null,string} contactId = null;
 		union{null,string} campaignId = null;
 		union{null,string} accountId = null;
  	}

	@topics("/com.x.emailmarketing.v1/ContactListsSearch/SearchContactLists")
	@version("1.0.1")
	record SearchContactLists {
		ListSearchFilter filter;
  	}

	@topics("/com.x.emailmarketing.v1/ContactListsSearch/SearchContactListsFailed")
	@version("1.0.1")
	record SearchContactListsFailed {
		SearchContactLists request;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.emailmarketing.v1/DeleteMessage/DeleteMessageSucceeded")
	@version("1.0.1")
	record DeleteMessageSucceeded {
		string messageId;
  	}

	record Criteria {
		union{null,string} description = null;
 		string property;
 		string operator;
 		union{null,array<string>} values = null;
  	}

	record DynamicContactListData {
		string name;
 		string description;
 		array<Criteria> criteria;
 		SegmentScope scope;
 		union{null,array<string>} staticListId = null;
  	}

	@topics("/com.x.emailmarketing.v1/CreateContactList.Dynamic/CreateDynamicContactList")
	@version("1.0.1")
	record CreateDynamicContactList {
		DynamicContactListData contactList;
  	}

	@topics("/com.x.emailmarketing.v1/CreateContactList.Dynamic/CreateDynamicContactListFailed")
	@version("1.0.1")
	record CreateDynamicContactListFailed {
		CreateDynamicContactList request;
 		array<com.x.core.v1.Error> errors;
  	}

	record DynamicContactList {
		string name;
 		string description;
 		array<Criteria> criteria;
 		SegmentScope scope;
 		union{null,array<string>} staticListId = null;
 		string listId;
  	}

	@topics("/com.x.emailmarketing.v1/ContactListsSearch/SearchContactListsSucceeded")
	@version("1.0.1")
	record SearchContactListsSucceeded {
		ListSearchFilter filter;
 		array<union{ContactList, DynamicContactList}> lists;
  	}

	@topics("/com.x.emailmarketing.v1/UpdateContactList.Dynamic/UpdateDynamicContactListSucceeded")
	@version("1.0.1")
	record UpdateDynamicContactListSucceeded {
		DynamicContactList contactList;
  	}

	@topics("/com.x.emailmarketing.v1/UpdateContactList.Dynamic/UpdateDynamicContactList")
	@version("1.0.1")
	record UpdateDynamicContactList {
		DynamicContactList contactList;
  	}

	@topics("/com.x.emailmarketing.v1/UpdateContactList.Dynamic/UpdateDynamicContactListFailed")
	@version("1.0.1")
	record UpdateDynamicContactListFailed {
		UpdateDynamicContactList request;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.emailmarketing.v1/CreateContactList.Dynamic/CreateDynamicContactListSucceeded")
	@version("1.0.1")
	record CreateDynamicContactListSucceeded {
		DynamicContactList contactList;
  	}

	@topics("/com.x.emailmarketing.v1/DeleteMessage/DeleteMessage")
	@version("1.0.1")
	record DeleteMessage {
		string messageId;
  	}

	@topics("/com.x.emailmarketing.v1/DeleteMessage/DeleteMessageFailed")
	@version("1.0.1")
	record DeleteMessageFailed {
		DeleteMessage request;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.emailmarketing.v1/AddContactListsToCampaign/AddContactListsToCampaign")
	@version("1.0.1")
	record AddContactListsToCampaign {
		string campaignId;
 		array<string> listIds;
  	}

	@topics("/com.x.emailmarketing.v1/AddContactListsToCampaign/AddContactListsToCampaignFailed")
	@version("1.0.1")
	record AddContactListsToCampaignFailed {
		AddContactListsToCampaign request;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.emailmarketing.v1/AddContactListsToCampaign/AddContactListsToCampaignSucceeded")
	@version("1.0.1")
	record AddContactListsToCampaignSucceeded {
		AddContactListsToCampaign request;
  	}

	record Message {
		string id;
  	}

	@topics("/com.x.emailmarketing.v1/UpdateMessage/UpdateMessageSucceeded")
	@version("1.0.1")
	record UpdateMessageSucceeded {
		Message mesg;
  	}

	@topics("/com.x.emailmarketing.v1/UpdateMessage/UpdateMessage")
	@version("1.0.1")
	record UpdateMessage {
		Message mesg;
  	}

	@topics("/com.x.emailmarketing.v1/UpdateMessage/UpdateMessageFailed")
	@version("1.0.1")
	record UpdateMessageFailed {
		UpdateMessage request;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.emailmarketing.v1/CreateMessage/CreateMessageFailed")
	@version("1.0.1")
	record CreateMessageFailed {
		Message mesg;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.emailmarketing.v1/CreateMessage/CreateMessageSucceeded")
	@version("1.0.1")
	record CreateMessageSucceeded {
		Message mesg;
  	}

	record GetContactStatisticFailed {
		string contactId;
 		array<com.x.core.v1.Error> errors;
  	}

	enum MessageType {
		NORMAL,
		WELCOME,
		CONFIRM
	}

	record MessageData {
		string id;
 		string accountId;
 		MessageType type;
 		string subjectText;
 		string htmlBody;
 		string textBody;
 		union{null,string} defaultFromEmail = null;
 		union{null,string} defaultFromName = null;
  	}

	@topics("/com.x.emailmarketing.v1/CreateMessage/CreateMessage")
	@version("1.0.1")
	record CreateMessage {
		MessageData mesg;
  	}

	enum CampaignStatus {
		DRAFT,
		SCHEDULED,
		EXECUTING,
		COMPLETED
	}

	record EmailCampaignData {
		string accountId;
 		string name;
 		union{null,string} description = null;
 		//A string representing the date and time as defined by RFC 3339's 'date-time' format with 'time-secfrac' defined.
		union{null,string} startTime = null;
 		//A string representing the date and time as defined by RFC 3339's 'date-time' format with 'time-secfrac' defined.
		union{null,string} endTime = null;
 		CampaignStatus status;
 		string messageId;
 		union{null,string} fromEmail = null;
 		union{null,string} fromName = null;
 		array<string> listIds;
 		union{null,com.x.core.v1.Address} address = null;
  	}

	@topics("/com.x.emailmarketing.v1/EmailCampaignCreation/CreateEmailCampaign")
	@version("1.0.1")
	record CreateEmailCampaign {
		EmailCampaignData campaignData;
  	}

	record EmailCampaign {
		string accountId;
 		string name;
 		union{null,string} description = null;
 		//A string representing the date and time as defined by RFC 3339's 'date-time' format with 'time-secfrac' defined.
		union{null,string} startTime = null;
 		//A string representing the date and time as defined by RFC 3339's 'date-time' format with 'time-secfrac' defined.
		union{null,string} endTime = null;
 		CampaignStatus status;
 		string messageId;
 		union{null,string} fromEmail = null;
 		union{null,string} fromName = null;
 		array<string> listIds;
 		union{null,com.x.core.v1.Address} address = null;
 		string id;
  	}

	@topics("/com.x.emailmarketing.v1/EmailCampaignUpdate/UpdateEmailCampaignSucceeded")
	@version("1.0.1")
	record UpdateEmailCampaignSucceeded {
		EmailCampaign campaign;
  	}

	@topics("/com.x.emailmarketing.v1/EmailCampaignUpdate/UpdateEmailCampaign")
	@version("1.0.1")
	record UpdateEmailCampaign {
		EmailCampaign campaign;
  	}

	@topics("/com.x.emailmarketing.v1/EmailCampaignUpdate/UpdateEmailCampaignFailed")
	@version("1.0.1")
	record UpdateEmailCampaignFailed {
		UpdateEmailCampaign request;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.emailmarketing.v1/CampaignSearch/SearchCampaignsSucceeded")
	@version("1.0.1")
	record SearchCampaignsSucceeded {
		array<EmailCampaign> campaigns;
 		SearchCampaigns request;
  	}

	@topics("/com.x.emailmarketing.v1/EmailCampaignCreation/CreateEmailCampaignFailed")
	@version("1.0.1")
	record CreateEmailCampaignFailed {
		EmailCampaign campaign;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.emailmarketing.v1/EmailCampaignCreation/CreateEmailCampaignSucceeded")
	@version("1.0.1")
	record CreateEmailCampaignSucceeded {
		EmailCampaign campaign;
  	}

	enum EventType {
		MESSAGE_BOUNCED,
		MESSAGE_OPENED,
		UNSUBSCRIBE
	}

	record EmailEvent {
		string campaignId;
 		string contactId;
 		//A string representing the date and time as defined by RFC 3339's 'date-time' format with 'time-secfrac' defined.
		string time;
 		EventType type;
  	}

	record CampaignStatistic {
		string campaignId;
 		int bounces;
 		int delivered;
 		int opens;
 		int clicks;
 		int unsubscribes;
 		array<union{EmailEvent, LinkClickEvent, SocialShareEvent}> allEvents;
  	}

	@topics("/com.x.emailmarketing.v1/CampaignStatisticsLookup/LookupCampaignStatisticsSucceeded")
	@version("1.0.1")
	record LookupCampaignStatisticsSucceeded {
		string campaignId;
 		CampaignStatistic statistic;
  	}

	record ContactStatistic {
		string contactId;
 		string campaignId;
 		boolean bounced;
 		int delivered;
 		int opens;
 		int clicks;
 		boolean unsubscribed;
 		array<union{EmailEvent, LinkClickEvent, SocialShareEvent}> allEvents;
  	}

	record GetContactStatisticSucceeded {
		ContactStatistic statistic;
  	}

	record MessageSearchFilter {
		union{null,string} messageId = null;
 		union{null,string} campaignId = null;
 		union{null,string} accountId = null;
  	}

	record SearchMessageFailed {
		MessageSearchFilter filter;
 		array<com.x.core.v1.Error> errors;
  	}

	record SearchMessageSucceeded {
		MessageSearchFilter filter;
 		array<Message> mesg;
  	}

	record SearchMessage {
		MessageSearchFilter filter;
  	}

	record Account {
		string email;
 		string emailName;
 		union{null,string} parentAccountId = null;
 		string id;
  	}

	@topics("/com.x.emailmarketing.v1/CampaignStatisticsLookup/LookupCampaignStatistics")
	@version("1.0.1")
	record LookupCampaignStatistics {
		string campaignId;
  	}

	@topics("/com.x.emailmarketing.v1/CampaignStatisticsLookup/LookupCampaignStatisticsFailed")
	@version("1.0.1")
	record LookupCampaignStatisticsFailed {
		LookupCampaignStatistics request;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.emailmarketing.v1/DeleteContactList/DeleteContactListSucceeded")
	@version("1.0.1")
	record DeleteContactListSucceeded {
		string id;
  	}


}