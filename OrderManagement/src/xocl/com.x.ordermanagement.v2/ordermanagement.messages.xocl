/** This file includes the messages that are part of the
 *  order management domain
 */
package com.x.ordermanagement.v2 {
	
	import com.x.ordermanagement.v2.* 
	import com.x.core.v1.*
	
	enum TaxabilityType {
		summary "Specifies the taxability types."
		description "Defines the values that can be used to specify the type of tax that applies to a given order line item."
		TAXABLE "Indicates tax should be applied to an item.",
		NONTAXABLE "Indicates tax should not be applied to an item.",
		EXEMPT "Indicates that the customer has tax exempt status, such as a non-profit organization.",
		DEFERRED "Indicates that the tax will be paid at a later date."
	}
	
	enum OrderStatus {
		summary "Specifies the order status types."
		description "Defines the values that can be used to specify the status of an order line item."
		NEW "Indicates that the order has just been created.",
		ON_HOLD "Indicates that the progress of the order is stopped.",
		BACKORDERED "Indicates that an item on the order is not available and the order is waiting until the merchant receives the item. ",
		PENDING_PAYMENT "Indicates that the order is waiting for the customer's payment.",
		READY_TO_SHIP "Indicates that the order is paid for and the items are available for shipping.",
		PARTIALLY_SHIPPED "Indicates that some of the items on the order have been shipped.",
		SHIPPED "Indicates that all the items on the order have been shipped.",
		PROCESSING_RETURN "Indicates that at least one item on the order has been received as a return.",
		EXCHANGED "Indicates that at least one item on the order has been received for an exchange.",
		CANCELLED "Indicates that the order was cancelled.",
		COMPLETED "Indicates that all processes for the order have been completed.",
		PAID "Indicates that payment for the order was received."
	}
	
	enum ShippingServiceType {
		summary "Specifies the shipping service types."
		description "Defines the values that can be used to specify the type of service used to deliver the purchased goods."
		MERCHANT_SHIPPED "Indicates that the merchant shipped the order themselves.",
		DROP_SHIP "Indicates that the merchant used a drop ship service to ship the order.",
		SHIPPING_SERVICE "Indicates that the merchant used a shipping service to ship the item.",
		WILL_CALL "Indicates that the customer will pick the item up from the merchant."
	}
	
	enum PromotionDiscountType {
		summary "Specifies the promotion discount types."
		description "Defines the values that can be used to specify the type of promotional discount that has been applied (if any) to the order."
		STOREWIDE_SALE "Indicates that the promotion was a store wide sale.",
		SHIPPING_DISCOUNT "Indicates that the promotion was a shipping discount.",
		PRODUCT_DISCOUNT "Indicates that the promotion was a product discount.",
		OTHER "Indicates that the promotion was something other than a store wide sale."
	}
	
	enum PaymentStatus {
		summary "Specifies the status values for payment."
		description "Defines the values that can be used to specify the payment processing status for a an order."
		AUTHORIZED "Indicates that the order payment has been authorized.",
		PAID "Indicates that the order has been paid for.",
		NOT_AUTHORIZED "Indicates that the payment for the order is waiting to be authorized.",
		PARTIAL "Indicates that some payment has been received but that the order has not been completely paid for.",
		NONE "Indicates that no payment has been received for the order."
	}
	
	record PackageDimensions {
		summary "Contains the package dimensions."
		description "Captures the depth, length, width and unit of dimension measurement for a package."
		float packageDepth "Depth measurement of the shipping package in the units specified."
		float packageLength "Length measurement of the shipping package in the units specified."
		float packageWidth "Width measurement of the shipping package in the units specified."
		union {EnglishLengthMeasurementUnit, MetricLengthMeasurementUnit} measurementUnit "Unit of measurement used."
	}
	
	record PackageWeight {
		summary "Contains the package weight."
		description "Captures the weight (major and minor) and unit of weight measurement for a package."
		float packageWeightMajor "The weight of the package in the units specified. For example, lb or kg."
		union {EnglishWeightMeasurementUnit, MetricWeightMeasurementUnit} majorMeasurementUnit "Unit of measurement used."
		float? packageWeightMinor "Minor unit of measurement based on the major unit used. For example, if the major package weight measurement unit is lb, this is oz.  If the major is kg, this is g."
	}
	
	record Shipment {
		summary "Shipping information for an order."
		description "Captures all the shipping information for an order, such as shipping method, shipping fees, surcharge, tracking details."
		string shipmentId "Unique identifier for a given shipment. The value must be unique within a given order only (e.g., 1, 2, 3, and so on)."
		CurrencyAmount shippingFees "Fees paid by the customer for this shipment."
		CurrencyAmount? discountAmount "Total discount amount associated with a shipment. This value is calculated from the individual promotional discounts applied to the shipment."
		array<PromotionalDiscount>? discounts "Container shipping discount information for one or more specific types of promotional discounts."
		CurrencyAmount? additionalCost "Sum of any additional fees applied to this shipment. For example, if the order consists of multiple items from the same offer, this specifies the cost of shipping each additional item beyond the first item."
		CurrencyAmount? packagingHandlingCost "Fees a merchant will assess for the shipping of the item (in addition to whatever the shipping service might charge)."
		CurrencyAmount? surcharge  "Additional fee to charge US buyers who have the purchased goods shipped via UPS or FedEx to Alaska, Hawaii or Puerto Rico. Only returned if set. This applies only to flat-rate shipping."
		array<TrackingDetail>? trackingDetails "Array of tracking details, such as carrier and tracking numbers, for this shipment."	
		string? shippingMethod  "Shipping method used, such as new day, ground, etc."
		DateRange? deliveryWindow  "Period of time within which the order will be delivered."
		DateRange? shippingWindow  "Period of time within which the order will be shipped."
		string? shippingMessage "Additional information for the customer."
		PackageDimensions? packageDimensions "Measurement of the shipping package."
		PackageWeight? packageWeight "Weight of the shipping package."
		string? packageType "Type of the shipping package, such as envelop, box, etc."
		boolean shippingIrregular = false "Whether a package is irregular and therefore cannot go through the stamping machine at the shipping service office and thus requires special or fragile handling."		
	}

	record GiftTag {
		summary "Information for the gift tag."
		description "Captures the information used on a gift tag."
		string? from "Name of the person sending the item."
		string? to "Name of the person this item is for."
		string giftMessage "Message to the person receiving the item, such as Happy Birthday."
	}
	
	record CustomerInfo confidential {
		summary "Contact information of the customer placing the order."
		description "Captures the ID, name, email address and phone number of the customer who placed the order."
		union{null, guid, EntityId} id = null "Unique customer identifier assigned by the system that created the customer."	
		Name name "Customer's name."
		Email? email "Customer's email address."
		Phone? phone "Customer's phone number."
	}
	
	record PromotionalDiscount {
		summary "Information about the promotional discount applied to an order."
		description "Captures the code, promotional description, type, and discount amount of the promotional discount applied to an order."
		string code "Code that identifies this promotional discount."
		string promoDescription "Information that describes the promotional discount, such as Labor Day Sale."
		PromotionDiscountType type "Type of discount applied. The valid values are: STOREWIDE_SALE, SHIPPING_DISCOUNT, PRODUCT_DISCOUNT, OTHER."
		CurrencyAmount amount "Amount of the discount to apply."
	}
	
	record ShipTo confidential {
		summary "Contact information of the person the order is being shipped to."
		description "Captures the name and address of the person the order is being shipped to and the gift tag information."
		Name name "Name of the person the order is being shipped to."
		Address address "Address of the person the order is being shipped to."
		GiftTag? giftTag "Information from the GiftTag record for the shipment."
	}
	
	record AdditionalCost {
		summary "Additional shipping cost information."
		description "Captures the description and amount of any additional shipping costs."
		string costDescription "Describes what the additional shipping costs were for."
		CurrencyAmount amount "Amount of the additional shipping costs."
	}
	
	record TrackingDetail {
		summary "Shipment tracking information for the order."
		description "Captures the shipment tracking number, carrier or service used and the shipping type."	
		array<string>? trackingNumbers "Order tracking numbers generated by the carrier or service."
		string? carrier "Name of the company that is shipping the order, such as a trucking company."
		string? service "Name of the shipping service that is shipping the order, such as FedEx."
		ShippingServiceType? serviceType "Type of service used. Valid values are: MERCHANT_SHIPPED,	DROP_SHIP,  SHIPPING_SERVICE, and WILL_CALL."
	}
	
	record ShippingInformationUpdate extends TrackingDetail {
		summary "Additional information for the TrackingDetail record."
		description "Captures the order number and order line ID, which is added to the TrackingDetail record."	
		string? orderNumber "Unique order identifier generated by the originator of the order."
		string? orderLineId "Unique identifier of an item."
	}
	
	record MarketplaceShippingInformationUpdate extends ShippingInformationUpdate {
		summary "Additional information for the ShippingInformationUpdate record."
		description "Captures additional information, which is added to the ShippingInformationUpdate record, such as the account and source ID and site code."	
		string? accountId "Unique account identifier assigned by the system that created the account."
		string? siteCode "Name that identifies the marketplace. For example, eBay_US or eBay_UK." 
		string? sourceId "Identifier for the channel where this order originated, such as eBay, Amazon, etc."
	}
	
	record ShippingInformationUpdateSucceeded {
		summary "Signals the update of the TrackingDetail record."
		description "Confirms that the TrackingDetail record was updated with the order number and order line ID contained in this record."	
		string? orderNumber "Unique order identifier generated by the originator of the order."
		string? orderLineId "Unique identifier of an item."
	}
	
	record ShippingInformationUpdateFailed {
		summary "Signals that specific shipping information couldn't be updated."
		description "Captures the order number and item identifier of the order where the shipping information couldn't be updated and the error information about the transaction useful in troubleshooting."
		string? orderNumber "Unique order identifier generated by the originator of the order."
		string? orderLineId "Unique identifier of an item."
		array<Error> errors "Unique code that identifies the particular error condition that occurred and provides details about the failure that are useful for troubleshooting."
	}
	
	record PaymentInfo {
		summary "Information about the method used to pay for an order."
		description "Captures detailed information about the method of payment used for an order."
		PaymentMethod method "Name of the payment method used for an order, such as PayPal, Visa, etc."
		string datePaid "Date the payment was processed."
		string? transactionId "Identifier for the payment transaction generated by the payment provider."
		string? transactionStatus "State of the payment process."
		CurrencyAmount? processingFee "Amount charged for processing."
		PaymentStatus paymentStatus = NONE "State of the order payment. The valid values are: AUTHORIZED, PAID, NOT_AUTHORIZED, PARTIAL, and (default) NONE."
	}
	
	record Tax {
		summary "Information about the tax charged on an order."
		description "Captures detailed information about the tax for an order."
		TaxabilityType? taxability "Tax status type of an order. Valid values are: TAXABLE, NONTAXABLE, EXEMPT, and DEFERRED."
		string? taxType "Type of tax being applied, such as state, county, federal, etc."
		double? effectiveRate "Tax rate a taxpayer would be taxed at if taxing was done at a constant rate."
		CurrencyAmount taxesCharged "Amount of tax charged for an order."
	}
		
	record OrderLinePrice {
		summary "Information about all the charges and credits for a single line item on an order."
		description "Captures detailed information about all the charges and credits for a single line item on an order, such as total price, insurance cost, total discounts."
		CurrencyAmount totalPrice "Total price for a single line item including all additional costs (sum of price of the item or multiples of this item, fees, additional costs, etc.)"
		CurrencyAmount price "Total amount (unit price) for the item without additional fees."
		CurrencyAmount? insuranceCost "Amount charged to insure the shipment."
		CurrencyAmount? totalDiscountAmount "Total amount of all of the discounts that were applied to a line item."	
		array<PromotionalDiscount>? allDiscounts "Array of the discounts that were applied to a line item."
		array<AdditionalCost>? additionalCosts "Array of all the additional costs that were associated with a line item."
	}
	
	record ReturnOrderLineData {
		summary "Information about a single line item that was returned."
		description "Captures detailed information about a single line item that was returned, such as ID, quantity, SKU, etc. This can be multiples of the same item."
		string? orderLineId "Unique identifier of the returned item."
		string? itemId "Ordered index of this item (also referred to as line number)."
		float quantity "How many of the item were returned."
		string productSku "Standardized SKU (Stock Keeping Unit) of the returned item. This is a unique number per product and merchant."
		string itemDescription "Description of the returned item."
		CurrencyAmount? totalTaxAmount "Total amount of tax charged for the returned item(s)."
		datetime dateReturned "Date the returned items were received. The format is (ISO 8601): YYYY-MM-DDTHH:MMZ." 	
		OrderLinePrice price "Total price for the returned items without additional fees."
		string? shipmentId "Unique identifier the shipment that was used to send the item to the customer. The value must be unique within a given order only (e.g., 1, 2, 3, and so on)."
	}

	record SimpleOrderLineData {
		summary "Information about a single line item."
		description "Captures detailed information about a single line item, such as ID, quantity, SKU, etc. This can be multiples of the same item."
		string? orderLineId "Unique identifier of an item."
		string? itemId "Ordered index of an item (also referred to as line number)."
		string? orderNumber "Unique order identifier generated by the originator of the order."
		float quantity "How many of an item are ordered."
		string productSku "Standardized SKU (Stock Keeping Unit) of an item. This is a unique number per product and merchant."
		string itemDescription "Description of an item."	
		OrderLinePrice unitPrice "Total price for an item without additional fees."
		CurrencyAmount? totalTaxAmount "Total amount of tax charged for an item(s)."
		OrderStatus status "Status of an order line item. Valid values are: NEW, ON_HOLD, BACKORDERED, PENDING_PAYMENT, READY_TO_SHIP, PARTIALLY_SHIPPED, SHIPPED, PROCESSING_RETURN, EXCHANGED, CANCELLED, COMPLETED, and PAID."
		CurrencyAmount price "Total amount (unit price) for the item without additional fees."		
		array<PromotionalDiscount>? allDiscounts "Array of the discounts that were applied to a line item."
		datetime? dateCancelled "Date the item was cancelled. The format is (ISO 8601): YYYY-MM-DDTHH:MMZ."
		datetime? dateDelivered "Date the item was delivered to the customer. The format is (ISO 8601): YYYY-MM-DDTHH:MMZ."
		datetime? dateShipped "Date the item was shipped to the customer. The format is (ISO 8601): YYYY-MM-DDTHH:MMZ."
		datetime? dateReturned "Date the item was returned. The format is (ISO 8601): YYYY-MM-DDTHH:MMZ."
		datetime? dateInvoiced "Date the invoice for the item was generated. The format is (ISO 8601): YYYY-MM-DDTHH:MMZ."
		ShipTo destination "Location the item was shipped to."
		string shipmentId "Unique identifier the shipment that was used to send the item to the customer. The value must be unique within a given order only (e.g., 1, 2, 3, and so on). "
		string? offerId "Identifier of the offer. This ID is assigned by the channel that published the offer. Note: offerId and offerURL provide information that can be used to construct a link to the product on the sales channel where it was purchased."
		string? offerUrl "URL of the offer. Note: offerId and offerURL provide information that can be used to construct a link to the product on the sales channel where it was purchased."
	}
	
	record OrderLineData extends SimpleOrderLineData {
		summary "Additional information for SimpleOrderLineData record."
		description "Captures additional information, which is added to the SimpleOrderLineData record, such as autoship, substitution, etc."
		string? lineMessage "Notes to the customer."
		boolean? bundle = false "Indicates the order is a bundled item, which means the item consists of several items. For example, a gamebox, controllers, and a game."
		boolean? expandBundle = false "Indicates you can expand the bundle and see the individual items."
		boolean? soloShip = false "Indicates the order can be divided into multiple shipments." 
		boolean? autoShip = false "Indicates item is to be shipped automatically."
		boolean? autoSubstitution = false "Indicates that if the item is not available a substitution can be done."
	}

	record OrderDetails {
		summary "Information for the order."
		description "Captures the details of the order."
		string? orderNumber "Unique order identifier generated by the originator of the order."
		OrderStatus status "Status of an order line item. Valid values are: NEW, ON_HOLD, BACKORDERED, PENDING_PAYMENT, READY_TO_SHIP, PARTIALLY_SHIPPED, SHIPPED, PROCESSING_RETURN, EXCHANGED, CANCELLED, COMPLETED, and PAID."
		string dateOrdered  "Date an item was ordered."
		CurrencyAmount grandTotal "Total amount paid by the customer (total amount of items, fees, taxes, etc.) for the order."
		CurrencyAmount? netMerchandiseValue "Total minus any non-shipping discounts."
		CurrencyAmount itemPriceTotal "Total amount of all the items without taxes, fees, etc."	
		CurrencyAmount? totalInsuranceCost "Total cost of insurance."
		CurrencyAmount? totalDiscountAmount "Total amount of all discounts."
		array<AdditionalCost>? additionalCosts "Total amount of all the additional costs."
		CurrencyAmount? totalTaxAmount "Total cost of all the taxes charged for this order."
		CurrencyAmount? totalShippingFees "Sum of the shipping fees from each of the associated shipment."
		array<PromotionalDiscount>? discounts "Array of all the promotional discounts that were applied at the order level."
		string sourceId "Identifier for the channel where this order originated, such as eBay, Amazon, etc."
		string sourceGroupId "Unique identifier of the group that classifies source, such as web, print, email, etc."
		array<string>? relatedOrderNumbers "Array of order numbers of any related orders."
		array<Shipment>? shipments "Array of the shipments that were created to ship one or more of the items in this order."
		string? referralSource "Marketing source that referred this order."
		string? buyerComments "Additional comments or instructions that the buyer wants to convey to the merchant."
	}
	
	record SimpleOrder extends OrderDetails {
		summary "Additional information for the OrderDetails record."
		description "Captures additional information, which is added to the OrderDetails record, such as the customer ID and order line IDs."
		union{null, guid, EntityId} customerId = null "Identifier assigned to the customer by the system that created the customer record."
		array<SimpleOrderLineData> orderLines "Array of order lines." 
	}
	
	record NonSensitiveOrderData extends OrderDetails {
		summary "Additional information for the OrderDetails record."
		description "Captures additional information, which is added to the OrderDetails record."	
		array<OrderLineData> orderLines "Order line item information."
	}
	
	record OrderData extends NonSensitiveOrderData {
		summary "Additional information for the NonSensitiveOrderData record."
		description "Captures additional information, which is added to the NonSensitiveOrderData record, such as customer, billing address, etc."	
		CustomerInfo customer "Detailed customer information." 
		Address? billingAddress "Billing address of the customer."
		array<PaymentInfo> paymentMethods "Array of the payment methods used for an order."
		ShipTo destination "Location the order is to be shipped to. This can be overwritten by the ShipTo in SimpleOrderLineData, when items on an order are shipped to more than one location."	
		string? purchaseOrder "Purchase order information."
	}
	
	record NonSensitiveOrder extends NonSensitiveOrderData {
		summary "Additional information for the NonSensitiveOrderData record."
		description "Captures the order guid, which is added to the NonSensitiveOrderData record."
		guid id "Unique identifier assigned by the system that created the order."
	}
	
	record Order extends OrderData {
		summary "Additional information for the OrderData record."
		description "Captures the order guid, which is added to the OrderData record."
		guid id "Unique identifier assigned by the system that created the record."
	}
	
	record ProcessOrder {
		summary "Information needed to process an order."
		description "Captures all the information needed to process an order."
		OrderData order "Order line item information."
	}
	
	record ProcessMarketplaceOrder extends ProcessOrder {
		summary "Additional information for the ProcessOrder record."
		description "Captures additional information, which is added to the ProcessOrder record, such as account ID and site code."
  		string? accountId "Unique account identifier assigned by the system that created the account."
		string? siteCode "Name that identifies the marketplace that is processing the order." 
	}
	
	record ProcessOrderSucceeded {
		summary "Signals that an order was processed successfully."
		description "Confirms successful processing an order and returns the information that was used to process the order."
		Order order "Detailed order information."
	}
	
	record ProcessOrderFailed {
		summary "Signals that the processing of an order has failed."
		description "Signals that the processing of an order has failed and returns information about the failure, which is useful for troubleshooting."
		OrderData order "Order information." 
		array<Error> errors "Unique code that identifies the particular error condition that occurred and provides details about the failure that are useful for troubleshooting."
	}
	
	record SubmitOrder {
		summary "Information needed to submit an order." 
		description "Captures all the information needed to submit an order."
		OrderData order "Information about the order."   
	}
	
	record SubmitMarketplaceOrder extends SubmitOrder {
		summary "Additional information for the SubmitOrder record."
		description "Captures additional information, which is added to the SubmitOrder record, such as account ID and site code."
		string? accountId "Unique account identifier assigned by the system that created the account."
		string? siteCode "Name that identifies the marketplace that is processing the order." 
	}
	
	record SubmitOrderSucceeded {
		summary "Signals that an order was successfully submitted."
		description "Confirms successfully submitting an order and returns the information that was used."
		Order order "Detailed order information."
	}
	
	record SubmitOrderFailed {
		summary "Signals that submitting an order has failed."
		description "Signals that submitting an order has failed and returns the order information and information about the failure, which is useful for troubleshooting."
		OrderData order "Order information."
		array<Error> errors "Unique code that identifies the particular error condition that occurred and provides details about the failure that are useful for troubleshooting."
	}
	
	record OrderShipped {
		summary "Information needed to ship an order."
		description "Captures all the information needed to ship an order."
		string orderNumber "Unique order identifier generated by the originator of the order."
		guid id "Unique identifier assigned by the system that created the record."
		Shipment shipment "Shipping information." 
		string sourceId "Identifier for the channel where this order originated, such as eBay, Amazon, etc."
		string? referralSource "Marketing source that referred this order."
    	array<OrderLineData>? orderLines "Order line item information."	
    }
	
	record MarketplaceOrderShipped extends OrderShipped {
		summary "Additional marketplace information for the OrderShipped record."
		description "Captures additional marketplace information, which is added to the OrderShipped record, such as account ID and site code."
		string accountId "Unique account identifier assigned by the system that created the account."
		string? siteCode "Name that identifies the marketplace that is processing the order." 
	}
	
	record ObserveOrderShipped {
		summary "Information about a shipped order." 
		description "Captures the information about a shipped order, which is sent to the observer."
		OrderShipped orderShipped "Information about the order that was shipped."
	}
	
	record ObserveMarketplaceOrderShipped {
		summary "Information about a marketplace order that was shipped."
		description "Captures the information about a marketplace order that was shipped, which is sent to the observer."
		MarketplaceOrderShipped marketplaceOrderShipped "Order information from the marketplace about the order that was shipped."
	}
	
    record CreateOrder {
		summary "Information needed to create an order."
		description "Captures detailed information used to create an order."
   		OrderData orderData "Detailed information about the order to be created."
	}
	
    record CreateMarketplaceOrder extends CreateOrder {
		summary "Additional information for the CreateOrder record."
		description "Captures additional information, which is added to the CreateOrder record, such as account ID and site code."
		string accountId "Unique account identifier assigned by the system that created the account."
		string? siteCode "Name that identifies the marketplace that is processing the order." 
	}
	
	record CreateOrderSucceeded {
		summary "Signals that the creation of an order was successful."
		description "Confirms successfully creating an order and returns the order number."
		string orderNumber "Unique order identifier generated by the originator of the order."
	}
	
	record SalesChannelCreateOrderSucceeded extends CreateOrderSucceeded {
		summary "Additional information for the CreateOrderSucceeded record."
		description "Captures additional information, which is added to the CreateOrderSucceeded record, such as account ID and site code."
		string accountId "Unique account identifier assigned by the system that created the account."
		string? siteCode "Name that identifies the marketplace that is processing the order." 
	}
	
	record CreateOrderFailed {
		summary "Signals that the attempt to create an order has failed."
		description "Signals that the attempt to create an order has failed and returns the order number and information about the failure, which is useful for troubleshooting."
		string orderNumber "Unique order identifier generated by the originator of the order."
		array<Error> errors "Unique code that identifies the particular error condition that occurred and provides details about the failure that are useful for troubleshooting."
	}
	
	record SalesChannelCreateOrderFailed extends CreateOrderFailed {
		summary "Additional information for the CreateOrderFailed record."
		description "Captures additional information, which is added to the CreateOrderFailed record, such as account ID and site code."
		string accountId "Unique account identifier assigned by the system that created the account."
		string? siteCode "Name that identifies the marketplace that is processing the order." 	
	}
	
	record OrderCreated {
		summary "Signals that an order was created."
		description "Signals that an order was created and returns order information and information about the failure, which is useful for troubleshooting. This information does not contain sensitive customer information."
		SimpleOrder simpleOrder "Order information that does not contain sensitive customer information." 
	}
	
	record CancelOrder {
		summary "Information needed to cancel an order."
		description "Captures all the information needed to cancel an order."
		array<string> orderNumbers "Array of unique order numbers." //?  what is the difference btw these Tod is sending me this info
		array<guid> orderIds "Array of internal order IDs." 
	}
	
	record CancelMarketplaceOrder extends CancelOrder {
		summary "Additional information for the CancelOrder record."
		description "Captures additional information, which is added to the CancelOrder record, such as account ID and site code."
		string accountId "Unique account identifier assigned by the system that created the account."
		string? siteCode "Name that identifies the marketplace that is processing the order." 
	}
	
	record CancelOrderSucceeded extends CancelOrder {
		summary "Information for the CancelOrder record." 
		description "Additional information, which is added to the CancelOrder record." 
	}
	
	record CancelMarketplaceOrderSucceeded extends CancelOrderSucceeded {
		summary "Additional information for the CancelOrderSucceeded record."
		description "Captures additional information, which is added to the CancelOrderSucceeded record, such as account ID and site code."
		string accountId "Unique account identifier assigned by the system that created the account."
		string? siteCode "Name that identifies the marketplace that is processing the order." 
	}
	
	record CancelOrderFailed {
		summary "Signals that the attempt to cancel an order has failed."
		description "Signals that the attempt to cancel an order has failed and returns the order number, guid, and information about the failure, which is useful for troubleshooting."
		string orderNumber "Unique order identifier generated by the originator of the order."
		guid id "Unique order identifier assigned by the system that created the order."
		array<Error> errors "Unique code that identifies the particular error condition that occurred and provides details about the failure that are useful for troubleshooting."
	}
	
	record CancelMarketplaceOrderFailed {
		summary "Signals that the attempt to cancel a marketplace order has failed."
		description "Signals that the attempt to cancel a marketplace order has failed and returns the failed order numbers and information about the failure, which is useful for troubleshooting."
		array<string> failedOrderNumbers "Array of the order numbers that failed to be cancelled."
		array<Error> errors "Unique code that identifies the particular error condition that occurred and provides details about the failure that are useful for troubleshooting."
	}
	
	record OrderCancelled {
		summary "Signals that an order was cancelled."
		description "Signals that an order was cancelled and returns the order information of the cancelled order."
		array<SimpleOrder> cancelledOrders "Order that was cancelled."
	}
	
	record MarketplaceOrderCancelled {
		summary "Signals that marketplace orders were cancelled."
		description "Returns the marketplace orders that were cancelled."
		array<Order> cancelledOrders "Array of the orders that were cancelled."
	}
	
    record SearchOrder {
		summary "Requests a search for orders."
		description "Requests a search for orders."
    	Query _AVDL_query "Search criteria." 
	}
	
	record MarketplaceSearchOrder extends SearchOrder {
		summary "Additional information for the SearchOrder record."
		description "Captures additional information, which is added to the SearchOrder record, such as the seller's account ID and site code."
		string? siteCode "Name that identifies the marketplace that is processing the order." 
		string? sellerAccountId "Unique identifier for the seller's account assigned by the system that created the account."
	}

	record SearchOrderSucceeded {
		summary "Signals that the search for orders was successful."
		description "Confirms successfully searching for orders and returns the information that was used for the search."
    	Query _AVDL_query "Search criteria." 
		array<Order> orders "Array of order found."
	}

	record MarketplaceSearchOrderSucceeded extends SearchOrderSucceeded {
		summary "Additional information for the SearchOrderSucceeded record."
		description "Captures additional information, which is added to the SearchOrderSucceeded record, such as the seller's account ID and site code."
		string? siteCode "Name that identifies the marketplace that is processing the order." 
		string? sellerAccountId "Unique identifier for the seller's account assigned by the system that created the account."
	}
	
	record SearchNonSensitiveOrderSucceeded {
		summary "Signals that searching for an order was successful." 
		description "Confirms successfully searching for orders and returns the search criteria and the result of the query."
	   	Query _AVDL_query "Search criteria." 
        array<NonSensitiveOrder> orders "Orders information without sensitive customer information."        	
	}
	
	record SearchOrderFailed {
		summary "Signals that searching for orders has failed." 
		description "Signals that searching for orders has failed and returns the search criteria and information about the failure, which is useful for troubleshooting."
		SearchOrder search "Search criteria used."
		array<Error> errors "Unique code that identifies the particular error condition that occurred and provides details about the failure that are useful for troubleshooting."
	}
	
	record MarketplaceSearchOrderFailed extends SearchOrderFailed {
		summary "Additional information for the SearchOrderFailed record."
		description "Captures additional information, which is added to the SearchOrderFailed record, such as the seller's account ID and site code."
		string? siteCode "Name that identifies the marketplace that is processing the order." 
		string? sellerAccountId "Unique identifier for the seller's account assigned by the system that created the account."
	}
	
	record OrderReturn {
		summary "Information about a returned order."
		description "Captures the detail information about an order that was returned."
		string orderNumber "Unique order identifier generated by the originator of the order."
		datetime? dateReturned "Date the return order was received by the merchant. The format is (ISO 8601): YYYY-MM-DDTHH:MMZ."
		union{null, guid, EntityId} customerId = null "Unique customer identifier assigned by the system that created the customer."
		datetime? dateOrdered "Date the order was created. The format is (ISO 8601): YYYY-MM-DDTHH:MMZ."
		array<ReturnOrderLineData>? orderLines "Array of the order line items that were returned." 
		CurrencyAmount totalAmountOfReturn "Total amount of the returned items."
		CurrencyAmount totalTaxAmountOfReturn "Total amount of the tax for the returned items."
	}
	
	record PartialOrderReturn {
		summary "Information about the returned items from an order where only some of the items were returned."
		description "Captures information about the returned items such as, item, cost, and order number, etc. from an order where only some of the items were returned."
		string orderNumber "Unique order identifier generated by the originator of the order."
		array<ReturnOrderLineData> returnedItems
		union{null, guid, EntityId} customerId = null "Unique customer identifier assigned by the system that created the customer."
		datetime? dateOrdered "Date the order was placed. The format is (ISO 8601): YYYY-MM-DDTHH:MMZ."
		CurrencyAmount totalAmountOfReturn "Total amount of the returned items."
		CurrencyAmount totalTaxAmountOfReturn "Total amount of the tax for the returned items."
	}
	
	record OrderAdjust {
		summary "Information to adjust (change) an order."
		description "Captures the information needed to adjust orders that were changed in ways that effect the overall price of the product."
		string? orderNumber "Unique order identifier generated by the originator of the order."
		
		/** TODO: Should the scope of the order line data be more constrainer here?
		 */
		array<SimpleOrderLineData> adjustedLines "Array of the lines that were adjusted/updated. This does not include items that were not adjusted or updated."
	}
	
	record PaymentUpdate {
		summary "Requests the update of the payment information in an order."
		description "Requests the update of the payment information in an order."
		string? orderNumber "Unique order identifier of the order to be updated."
		array<PaymentInfo> paymentInfo "Payment data needed for the update."
	}
	
	record MarketplacePaymentUpdate extends PaymentUpdate {
		summary "Additional information for the PaymentUpdate record."
		description "Captures additional information, which is added to the PaymentUpdate record, such as account and site ID."
		string? accountId "Unique account identifier for the marketplace assigned by the system that created the account." 
		string? siteId "Unique site identifier of the marketplace."
	}
	
	record PaymentUpdateSucceeded {
		summary "Signals that updating payment information was successful."
		description "Confirms successfully updating payment information and returns the number of the order that was updated."
		string orderNumber "Unique order identifier generated by the originator of the order."	
	}
	
	record MarketplacePaymentUpdateSucceeded extends PaymentUpdateSucceeded {
		summary "Additional information for the PaymentUpdateSucceeded record."
		description "Captures additional information, which is added to the PaymentUpdateSucceeded record, such as account and site ID."
		string? accountId "Unique account identifier assigned by the system that created the account."
		string? siteId "Unique site identifier of the marketplace."
	}
	
	record PaymentUpdateFailed {
		summary "Signals that updating payment information has failed."
		description "Signals that updating payment information has failed. Returns the number of the order that was being updated and information about the failure, which is useful for troubleshooting."
		string orderNumber "Unique order identifier generated by the originator of the order."
		array<Error> errors "Unique code that identifies the particular error condition that occurred and provides details about the failure that are useful for troubleshooting."
	}
	
	record MarketplacePaymentUpdateFailed extends PaymentUpdateFailed {
		summary "Contains additional information for the PaymentUpdateFailed record."
		description "Captures additional information, which is added to the PaymentUpdateFailed record, such as account and site ID."
		string? accountId "Unique account identifier assigned by the system that created the account."
		string? siteId "Unique site identifier of the marketplace."
	}

}
