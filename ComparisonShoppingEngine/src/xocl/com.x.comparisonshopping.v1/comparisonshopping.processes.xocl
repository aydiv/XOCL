/*
 * This file contains a the processes that are associated with the comparison shopping
 * engine domain
 */

package com.x.comparisonshopping.v1
{	
	import com.x.comparisonshopping.v1.* 
	
    // Publish a set of products on a comparison shopping engine site
    process PublishProductFeed(ProductFeed productFeed)
    {
        summary "Publishes products to the comparison shopping engine channel."
        description "Uploads the product feed file and adds the to the comparison shopping engine channel."
        
        roles 
        	{
        		TrafficGenerationManager "Uploads a product feed file containing a list of products to a comparison shopping engine channel."
        		ComparisonShoppingPublisher "Adds the products to the comparison shopping engine channel."
        	}
        
        preconditions(productFeed[ProductFeed.Prepared])
        
	    // The baseline worflow for processing product feeds
	    workflow
		{
	    	summary "Baseline workflow for processing product feed files."
	    	description "TBD"
	    	// This transaction publishes the feed to the CSE 
	        transaction PublishProductFeed
	        {
	        	roles(PublishProductFeed.TrafficGenerationManager, PublishProductFeed.ComparisonShoppingPublisher)
	        }
	    }
	    
        postconditions
        {
          success(productFeed[ProductFeed.Published])
          failure(productFeed[ProductFeed.Denied])
        }
    }
    
    
    process UpdatePublishedProductFeed(ProductFeed productFeed) {
        summary "TBD"
        description "The traffic generation manager updates information about one or more products that have already been published"
        
        roles(TrafficGenerationManager, ComparisonShoppingPublisher)
        
        preconditions(productFeed[ProductFeed.Published])
        
	    workflow {
	    	summary "TBD"
			description "TBD"
			
	    	
	        transaction UpdateProductFeed
	        {
	        	roles(TrafficGenerationManager, ComparisonShoppingPublisher)
	        }
	    }
	    
        postconditions
        {
          success(productFeed[ProductFeed.Updated])
          failure(productFeed[ProductFeed.Denied])
        }
    	
    }
}