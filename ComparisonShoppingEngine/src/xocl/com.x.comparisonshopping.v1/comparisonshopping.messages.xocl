/*
 * This package defines types used by messages in com.x.comparisonshopping
 */

package com.x.comparisonshopping.v1 {
	
	import com.x.core.v1.*
	

	// The role of each image associated with offered products
	enum ImagePurpose {
		Hero,
		Gallery,
		Thumbnail
	}
	
	// Determine how the bacground will be shown for the product image
	enum ImageBackgroundType {
		HasBackground,
		NoBackground,
		Unknown
	}
	
	// The avaialability that will be represented for each offered product
	enum AvailabilityType {
		InStock,
		AvailableForOrder,
		Unknown
	}
	
	// Classifies the product feed as a complete, full feed or an incremental
	// feed (partial)
	enum ProductFeedType {
		Full,
		Incremental
	}
			
	// This is a general structure for capturing the various label/value
	// pairs that are collected and associated with products 
	record ProductAttribute {
		string id
		string label
		string value
	}
	
	// This record brings together all the information needed to represent
	// a product image
	record ProductImage {
		string imageUrl
		ImagePurpose imagePurpose
		ImageBackgroundType backgroundType
	}
	
	// This record holds basic information used to determine taxes associated
	// with an offered product
	record TaxRate {
		string country
		string region
		double rate
		boolean taxShipping
	}
	
	// This record holds basic information used to represent the shipping
	// information associated with an offered product
	record Shipping {
	 	string country
	 	string region
	 	string service
	 	CurrencyAmount price
	 }

	// This define the information that is used to represent each value
	// that can be associated with a given variation	
	record VariationValue {
		CurrencyAmount price
		string sku
		array<ProductImage> imageUrls
		string value
	}
	
	// This represents a single variation and its corresponding value
	record Variation {
		string id
		array<VariationValue> values
	}
	
	// The product information needed to represent a product on a CSE
	record Product {
		string sku
		CurrencyAmount price;
		int quantity;
   		string title
   		string productDescription;
   		string manufacturer
   		string? mpn
   		string? gtin
   		string brand
   		string category
   		string? xProductTypeId  // Product type id as defined by the taxonomy manager.
   		array<string>? productTypes
   		array<ProductImage> images
   		string link
   		CurrencyAmount originalPrice
   		AvailabilityType availability
   		TaxRate? taxRate
   		Shipping? shipping
   		double? shippingWeight
   		array<ProductAttribute> attributes
   		array<Variation>? variations
   		CurrencyAmount? cpc
   		string channelId
	}
	
	// A mapping from the product SKU to the cse-assigned product id
	record MappedProductId {
		string sku;
		string cseProductId;
	}
	
	// The collection of products to be published on a comparison
	// shopping engine
	record PublishProductFeed {
		array<Product> products
		ProductFeedType feedType
		string xAccountId
		string siteId
		string? feedName
	}
	
	// The information assigned by the CSE when the feed was successfully
	// published
	record PublishProductFeedSuccess {
		array<MappedProductId> cseProductIds;
	}
	
	// The CSE was unable to publish the product feed
	record PublishProductFeedFailure {
		string errorCode;
	}
	
	// The collection of products to be updated
	record UpdateProductFeed {
		array<Product> products;
		string xAccountId; 
		string siteId;
		string? feedName;
	}
	
	// A list of cseId's are returned with update success
	record UpdateProductFeedSuccess {
		array<MappedProductId> cseProductIds;
	}
	
	// The CSE was unable to update the products
	record UpdateProductFeedFailure {
		string errorCode;
	}
}
