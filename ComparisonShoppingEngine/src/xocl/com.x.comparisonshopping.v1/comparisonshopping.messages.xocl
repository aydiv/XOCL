/*
 * This package defines types used by messages in com.x.comparisonshopping
 */

package com.x.comparisonshopping.v1 {
	
	import com.x.core.v1.*
	

	enum ImagePurpose {
		summary "Type of product image."
		description "Identifies the product image type as Hero, Gallery, or Thumbnail."
		Hero "TBD", 
		Gallery "Image is for the gallery.",
		Thumbnail "Image is a small thumbnail picture."
	}
	
	enum ImageBackgroundType {
		summary "Background used by a product image."
		description "Identifies the background of a product image as HasBackground, NoBackground, or Unknown."
		HasBackground "Product image has a background.",
		NoBackground "Product image doesn't have a background.",
		Unknown "You don't know if the image has a background."
	}
	
	enum AvailabilityType {
		summary "Product availability status for each offered product."
		description "Identifies the availability of a product as InStock, AvailableForOrder, or Unknown."
		InStock "Product is in stock and ready to ship with the required number of days.",
		AvailableForOrder "Product is not in stock but can be ordered.",
		Unknown "Availability is not known."
	}
	
	enum ProductFeedType {
		summary "Product feed file classification."
		description "Classifies the product feed file as a Full (complete) or Incremental (partial)."
		Full "Product feed file contains all the products.",
		Incremental "Product feed file contains only new products to be added to the comparison shopping engine channel."
	}
			
	record ProductAttribute {
		summary "Product label/value pairs."
		description "Captures the various label/value pairs that are collected and associated as attributes with a product."
		string id "Unique ID assigned by the originator of the offer."
		string label "Label you create for the product. For example, Brand."
		string value "Value for that label. For example: Nike."
	}
	
	record ProductImage {
		summary "Information needed for a product image."
		description "Captures the product image URL, the image purpose, and the image background type."
		string imageUrl "URL of the image file."
		ImagePurpose imagePurpose "Type of product image. The values are Hero, Gallery, or Thumbnail."
		ImageBackgroundType backgroundType "Background of the product image. The values are NoBackground, HasBackground, or Unknown."
	}
	
	record TaxRate {
		summary "Rate at which an offered product is taxed according to country or region."
		description "Captures the country, region, tax rate, and whether to charge tax on the cost of shipping information."
		string country "Country where the product is located (shipped from)."
		string region "Region (state) where the product is located (shipped from)."
		double rate "Tax rate for the country and region where the product is located (shipped from)."
		boolean taxShipping "Determines whether to charge tax on the shipping cost."
	}
	
	record Shipping {
	 	summary "Type of service used to ship an offered product."
	 	description "Captures the country and region where the product is located (shipped from), the shipping service to use, and the flat rate cost to ship the product."
	 	string country "Country where the product is located (shipped from)."
	 	string region "Region (state) where the product is located (shipped from)."
	 	string service "Shipping service that will be used to ship the product."
	 	CurrencyAmount price "Flat rate cost to ship the product."
	 }

	record VariationValue {
		summary "Product variation information."
		description "Captures the information used to represent each value that can be associated with a given variation of a product."
		CurrencyAmount price "Price for the product variation."
		string sku "SKU (Stock Keeping Unit) of the variation. This is a unique number per product and merchant."
		array<ProductImage> imageUrls "Array of URLs to the images for a specific product variation."
		string value "Price of a specific product variation."
	}
	
	record Variation {
		summary "Product variation definition."
		description "Captures all the information for a single variation."
		string id "ID of a single variation."
		array<VariationValue> values "Array of the variation values for a product."
	}
	
	record Product {
		summary "Product information needed to represent a product on a comparison shopping engine channel."
		description "Captures all the product information needed to represent a product on a comparison shopping engine channel."
		string sku "SKU (Stock Keeping Unit) of the product. This is a unique number per product and merchant."
		CurrencyAmount price "Price of the product."; 
		int quantity "How many of this product you have in stock.";
   		string title "Title for the product."
   		string productDescription "Description of the product.";
   		string manufacturer "Name of the manufacturer/supplier of the product."
   		string? mpn "Manufacturer product number of the product."
   		string? gtin "GTIN (Global Trade Item Number) of the product (need only for international sales)."
   		string brand "Brand name of the product."
   		string category "Category of the product as defined by the taxonomy manager."
   		string? xProductTypeId  "Product type ID as defined by the taxonomy manager." 
   		array<string>? productTypes "Product types associated with the product as defined by the taxonomy manager."
   		array<ProductImage> images  "Array of the image files of the product."
   		string link "URL to the product in the merchant store."
   		CurrencyAmount originalPrice "Original cost of the product (cost basis)."
   		AvailabilityType availability "Availability status of the product. The values are InStock, AvailableForOrder, or Unknown."
   		TaxRate? taxRate "Tax rate based on the country and region of the product's location (where the product is shipped from)."
   		Shipping? shipping "Shipping service to be used for the product."
   		double? shippingWeight "Weight of the product."
   		array<ProductAttribute> attributes "Array of all the product attributes."
   		array<Variation>? variations "Array of all the product variations."
   		CurrencyAmount? cpc "Price for the product on the comparison shopping engine channel."
   		string channelId "ID of the comparison shopping engine channel."
	}
	
	record MappedProductId {
		summary "Product SKU to CSE-assigned product ID mappings."
		description "Maps the merchant product SKU to the comparison shopping engine assigned product ID."
		string sku "SKU (Stock Keeping Unit) of the product. This is a unique number per product and merchant.";
		string cseProductId "(CSE) Comparison Shopping Engine ID for the product."
	}
	
	record PublishProductFeed {
		summary "Publishes the product feed file."
		description "Generates and uploads the product feed file to the comparison shopping engine channel."
		array<Product> products "Array of the products to be published by a comparison shopping engine."
		ProductFeedType feedType "Type of product feed file, which is either Full (complete) or Incremental (partial)."
		string xAccountId "Merchant's ID for the comparison shopping engine channel."
		string siteId "ID of the comparison shopping engine."
		string? feedName "Name of the product feed file."
	}
	
	record PublishProductFeedSuccess {
		summary "Returns the product IDs for each published product when publishing is successful."
		description "Returns an array of the product IDs and their associated comparison shopping engine product IDs when the product feed file is successfully published."
		array<MappedProductId> cseProductIds "Array of the product IDs and their associated (CSE) Comparison Shopping Engine product IDs.";
	}
	
	record PublishProductFeedFailure {
		summary "Publishing products failed."
		description "Returns the error code of the product publishing failure."
		string errorCode "Error code of the publishing failure.";
	}
	
	record UpdateProductFeed {
		summary "Updates published products."
		description "Generates and uploads a product feed file containing only updates to currently published products."
		array<Product> products "Array of the products to be updated on a comparison shopping engine channel.";
		string xAccountId "Merchant's ID for the comparison shopping engine channel."; 
		string siteId "ID of the comparison shopping engine.";
		string? feedName "Name of the product feed file."
	}
	
	record UpdateProductFeedSuccess {
		summary "Returns the product IDs for each updated product."
		description "Returns an array of product IDs and their associated comparison shopping engine product IDs when the products were successfully updated."
		array<MappedProductId> cseProductIds "An array of the product ID and their associated (CSE) Comparison Shopping Engine product ID.";
	}
	
	record UpdateProductFeedFailure {
		summary "Products failed to be updated."
		description "Error code for the product updating failure."
		string errorCode "The error code of the update failure.";
	}
}
