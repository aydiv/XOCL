/*
 * This package defines types used by messages in com.x.comparisonshopping
 */

package com.x.comparisonshopping.v1 {
	
	import com.x.core.v1.*
	

	enum ImagePurpose {
		summary "Specifies the product image type."
		description "Defines the values used to specify the product image type."

		Hero "Primary full-sized image of a product.", 
		Gallery "Image to be used in the gallery.",
		Thumbnail "Small image to be used as a thumbnail picture."
	}
	
	enum ImageBackgroundType {
		summary "Specifies the background used by a product image."
		description "Defines the values used to specify the background of a product image."

		HasBackground "Product image has a background.",
		NoBackground "Product image doesn't have a background.",
		Unknown "You don't know if the image has a background."
	}
	
	enum AvailabilityType {
		summary "Specifies the product availability status for each offered product."
		description "Defines the values used to identify the availability of a product."

		InStock "Product is in stock and ready to ship within the required number of days.",
		OutOfStock "Product is currently out of stock.",
		AvailableForOrder "Product is not in stock but can be ordered.",	
		Unknown "Availability is not known."
	}
	
	enum ProductFeedType {
		summary "Specifies the product feed file classification."
		description "Defines the values used to classify a product feed file."

		Full "Product feed file contains all the products.",
		Incremental "Product feed file contains only products to be added or updated."
	}
			
	record ProductAttribute {
		summary "Contains the product label/value pairs."
		description "Captures the various label/value pairs that are collected and associated as attributes with a product."

		string id "Unique identifier of this attribute."
		string label "Label that describes the attribute. For example, Brand."
		string value "Value of the label. For example: Nike."
	}
	
	record ProductImage {
		summary "Contains information needed for a product image."
		description "Captures the product image URL, the image purpose, and the image background type."

		string imageUrl "URL (location) of the image file."
		ImagePurpose imagePurpose "Role associated with the image."
		ImageBackgroundType backgroundType "Background of the product image."
	}
	
	record TaxRate {
		summary "Contains the rate at which an offered product is taxed according to country and region."
		description "Captures the country, region, tax rate, and whether to charge tax on the cost of shipping information."

		string country "Country where the taxes are being applied."
		string region "Region (state) where the taxes are being applied."
		double rate "Tax rate that will be used to calculate taxes."
		boolean taxShipping "Determines whether to charge tax on the shipping cost."
	}
	
	record Shipping {
	 	summary "Contains the type of service used to ship an offered product."
	 	description "Captures the country and region where the product will be delivered, the shipping service to use, and the flat rate cost to ship the product."

	 	string country "Country where the product will be delivered."
	 	string region "Region (state) country where the product will be delivered."
	 	string service "Shipping service (ground, air, etc.) that will be used when the product is shipped."
	 	CurrencyAmount price "Amount that will be charged to ship the product."
	}
	
	record Variation {
		summary "Contains the product variation definition."
		description "Captures the id, name, and single value for variation."

		string? id "Unique identifier for this variation."
		string name "The label name for the variation."
		string value "The value assigned to the variation."
	}
	
	record Product {
		summary "Contains the product information needed to represent a product on a comparison shopping engine channel."
		description "Captures all the product information needed to represent a product on a comparison shopping engine channel, such as quantity, title, SKU, category, etc."

		string sku "Standardized SKU (Stock Keeping Unit) of the product. This is a unique identifier supplied by the merchant."
		string? itemGroup "The identifier that groups together all the variation values for this product (if it has variations)."
		CurrencyAmount price "Price to purchase the product."; 
		int quantity "How many of this product there are in stock.";
   		string title "Title of the product."
   		string productDescription "Description of the product.";
   		string manufacturer "Name of the manufacturer/supplier of the product."
   		string? mpn "Manufacturer part number of the product."
   		string? gtin "Global Trade Item Number for the product that can represent UPC, EAN, JAN, or ISBN (the type is inferred from the format)."
   		string brand "Brand name of the product."
   		string category "Category that will be used to determine where the product will appear in the comparison shopping engine taxonomy."
   		string? xProductTypeId  "Product type identifier as defined by the taxonomy manager." 
   		array<string>? productTypes "Product types associated with the product as defined by the taxonomy manager."
   		array<ProductImage> images  "Array of  URLs for the product images (with assigned roles)."
   		string link "Link to the product landing page on the merchant's storefront."
   		CurrencyAmount originalPrice "Original price of the item before any discounting."
   		AvailabilityType availability "Availability status of the product."
   		TaxRate? taxRate "Tax rate based on the country and region of the product's location (where the product is shipped from)."
   		Shipping? shipping "Shipping profile of a product and its shipping price."
   		double? shippingWeight "Shipping weight of the product."
   		array<ProductAttribute> attributes "Name/value attributes pairs used to represent product variation."
   		array<Variation>? variations "Collection of variations associated with the product."
   		CurrencyAmount? cpc "Amount the merchant is willing to pay per click (cost per click)."
   		string channelId "Identifier of the comparison shopping engine channel."
	}
	
	record MappedProductId {
		summary "Contains the product SKU to CSE-assigned product identifier mappings."
		description "Captures the mapping of the merchant's product SKU to the product identifier assigned to the product by the comparison shopping engine."

		string sku "Standardized SKU (Stock Keeping Unit) of the product. This is a unique identifier supplied by the merchant.";
		string cseProductId "CSE (Comparison Shopping Engine) identifier for the product."
	}
	
	record PublishProductFeed {
		summary "Contains information for the product feed file."
		description "Captures information needed to publish the feed file such as, products, site and account ID, name of the feed file, etc."

		array<Product> products "Array of the products to be published to a comparison shopping engine."
		ProductFeedType feedType "Type of product feed file."
		string xAccountId "Unique X.commerce identifier for the merchant's account. This value is assigned to a merchant when an account created at the end of the authorization flow. It is returned in the message published to the /cse/authorization/completed topic."
		string siteId "Identifier of the comparison shopping engine."
		string? feedName "Name of the product feed file."
	}
	
	record PublishProductFeedSuccess {
		summary "Signals that a feed file was successfully published."
		description "Signals that a feed file was successfully published and returns an array of the product IDs and their associated comparison shopping engine product IDs."

		array<MappedProductId> cseProductIds "Array of the product IDs and their associated (CSE) Comparison Shopping Engine product IDs.";
	}
	
	record PublishProductFeedFailure {
		summary "Signals that publishing a feed file failed."
		description "Signals that publishing a feed file failed and returns the error code of the failure, which is useful for troubleshooting."
		string errorCode "Error code of the publishing failure.";
	}
	
	record UpdateProductFeed {
		summary "Contains update information for published products."
		description "Captures the information needed to update products that have already been published on a comparison shopping engine channel."

		array<Product> products "Array of the products to be updated on a comparison shopping engine channel.";
		string xAccountId "Unique X.commerce identifier for the merchant's account. This value is assigned to a merchant when an account created at the end of the authorization flow. It is returned in the message published to the /cse/authorization/completed topic."
		string siteId "Identifier of the comparison shopping engine.";
		string? feedName "Name of the product feed file."
	}
	
	record UpdateProductFeedSuccess {
		summary "Signals that published products were updated."
		description "Signals that published products were updated and returns an array of product IDs and their associated comparison shopping engine product IDs when the products are successfully updated."

		array<MappedProductId> cseProductIds "An array of the product identifiers and their associated (CSE) Comparison Shopping Engine product identifier.";
	}
	
	record UpdateProductFeedFailure {
		summary "Signals that published products failed to be updated."
		description "Signals that the request to update published products has failed and returns the error codes of the failure, which are useful for troubleshooting."
		string errorCode "Error code of the update failure.";
	}
}
