/*
 * This package defines types used by messages in com.x.comparisonshopping
 */

package com.x.comparisonshopping.v1 {
	
	import com.x.core.v1.*
	

	enum ImagePurpose {
		summary "Type of product image."
		description "Identifies the product image type as Hero, Gallery, or Thumbnail."

		Hero "Primary full-sized image of a product.", 
		Gallery "Image to be used in the gallery.",
		Thumbnail "Small image to be used as a thumbnail picture."
	}
	
	enum ImageBackgroundType {
		summary "Background used by a product image."
		description "Identifies the background of a product image as HasBackground, NoBackground, or Unknown."

		HasBackground "Product image has a background.",
		NoBackground "Product image doesn't have a background.",
		Unknown "You don't know if the image has a background."
	}
	
	enum AvailabilityType {
		summary "Product availability status for each offered product."
		description "Identifies the availability of a product as InStock, AvailableForOrder, or Unknown."

		InStock "Product is in stock and ready to ship with the required number of days.",
		OutOfStock "Product is currently out of stock.",
		AvailableForOrder "Product is not in stock but can be ordered.",	
		Unknown "Availability is not known."
	}
	
	enum ProductFeedType {
		summary "Product feed file classification."
		description "Classifies the product feed file as Full (complete) or Incremental (partial)."

		Full "Product feed file contains all the products.",
		Incremental "Product feed file contains only products to be added or updated to the comparison shopping engine channel."
	}
			
	record ProductAttribute {
		summary "Product label/value pairs."
		description "Captures the various label/value pairs that are collected and associated as attributes with a product."

		string id "Unique identifier of this attribute."
		string label "Label that describes the attribute. For example, Brand."
		string value "Value of the label. For example: Nike."
	}
	
	record ProductImage {
		summary "Information needed for a product image."
		description "Captures the product image URL, the image purpose, and the image background type."

		string imageUrl "URL (location) of the image file."
		ImagePurpose imagePurpose "Role associated with the image. The values are Hero, Gallery, or Thumbnail."
		ImageBackgroundType backgroundType "Background state of the product image. The values are NoBackground, HasBackground, or Unknown."
	}
	
	record TaxRate {
		summary "Rate at which an offered product is taxed according to country and region."
		description "Captures the country, region, tax rate, and whether to charge tax on the cost of shipping information."

		string country "Country where the taxes are being applied."
		string region "Region (state) where the taxes are being applied."
		double rate "Tax rate that will be used to calculate taxes."
		boolean taxShipping "Determines whether to charge tax on the shipping cost."
	}
	
	record Shipping {
	 	summary "Type of service used to ship an offered product."
	 	description "Captures the country and region where the product will be delivered, the shipping service to use, and the flat rate cost to ship the product."

	 	string country "Country where the product will be delivered."
	 	string region "Region (state) country where the product will be delivered."
	 	string service "Shipping service (ground, air, etc.) that will be used when the product is shipped."
	 	CurrencyAmount price "Amount that will be charged to ship the product."
	}
	
	record Variation {
		summary "Product variation definition."
		description "Captures the id, name, and single value for variation."

		string? id "Unique identifier for this variation."
		string name "The label name for the variation."
		string value "The value assigned to the variation."
	}
	
	record Product {
		summary "Product information needed to represent a product on a comparison shopping engine channel."
		description "Captures all the product information needed to represent a product on a comparison shopping engine channel, such as quantity, title, SKU, category, etc."

		string sku "Standardized SKU (Stock Keeping Unit) of the product. This is a unique number per product and merchant."
		string? itemGroup "The identifier that groups together all the variation values for this product (if it has variations)."
		CurrencyAmount price "Price to purchase the product."; 
		int quantity "How many of this product are in stock.";
   		string title "Title for the product."
   		string productDescription "Description of the product.";
   		string manufacturer "Name of the manufacturer/supplier of the product."
   		string? mpn "Manufacturer part number of the product."
   		string? gtin "Global Trade Item Number for the product that can represent UPC, EAN, JAN, or ISBN (the type is inferred from the format)."
   		string brand "Brand name of the product."
   		string category "Category that will be used to determine where the product will appear in the comparison shopping engine taxonomy."
   		string? xProductTypeId  "Product type identifier as defined by the taxonomy manager." 
   		array<string>? productTypes "Product types associated with the product as defined by the taxonomy manager."
   		array<ProductImage> images  "Array of  URLs for the product images (with assigned roles)."
   		string link "Link to the product landing page on the merchant's storefront."
   		CurrencyAmount originalPrice "Original price of the item before any discounting."
   		AvailabilityType availability "Availability status of the product. The values are InStock, AvailableForOrder, or Unknown."
   		TaxRate? taxRate "Tax rate based on the country and region of the product's location (where the product is shipped from)."
   		Shipping? shipping "Shipping profile of a product and its shipping price."
   		double? shippingWeight "Shipping weight of the product."
   		array<ProductAttribute> attributes "Name/value attributes pairs used to represent product variation."
   		array<Variation>? variations "Collection of variations associated with the product."
   		CurrencyAmount? cpc "Amount the merchant is willing to pay per click (cost per click)."
   		string channelId "Identifier of the comparison shopping engine channel."
	}
	
	record MappedProductId {
		summary "Product SKU to (Comparison Shopping Engine) CSE-assigned product identifier mappings."
		description "Maps the merchant's product SKU to the product identifier assigned to the product by the comparison shopping engine."

		string sku "Standardized SKU (Stock Keeping Unit) of the product. This is a unique number per product and merchant.";
		string cseProductId "(CSE) Comparison Shopping Engine identifier for the product."
	}
	
	record PublishProductFeed {
		summary "Publishes (sends) the product feed file."
		description "Generates and sends the product feed file to the comparison shopping engine channel."

		array<Product> products "Array of the products to be published to a comparison shopping engine."
		ProductFeedType feedType "Type of product feed file, which is either Full (complete) or Incremental (partial)."
		string xAccountId "Unique X.commerce identifier for the merchant account. This value is assigned to a merchant account when it is created at the end of the authorization work flow and is returned in the message published to the /cse/authorization/completed topic."
		string siteId "Identifier of the comparison shopping engine."
		string? feedName "Name of the product feed file."
	}
	
	record PublishProductFeedSuccess {
		summary "Retrieves the product IDs for each published product when publishing is successful."
		description "Returns an array of the product IDs and their associated comparison shopping engine product IDs when the product feed file is successfully published."

		array<MappedProductId> cseProductIds "Array of the product IDs and their associated (CSE) Comparison Shopping Engine product IDs.";
	}
	
	record PublishProductFeedFailure {
		summary "Indicates that publishing products failed."
		description "Returns the error code and details of the product publishing failure."

		string errorCode "Error code and details of the publishing failure.";
	}
	
	record UpdateProductFeed {
		summary "Updates published products."
		description "Generates and sends a product feed file containing only updates to currently published products."

		array<Product> products "Array of the products to be updated on a comparison shopping engine channel.";
		string xAccountId "Unique X.commerce identifier for the merchant account. This value is assigned to a merchant account when it is created at the end of the authorization work flow and is returned in the message published to the /cse/authorization/completed topic."; 
		string siteId "Identifier of the comparison shopping engine.";
		string? feedName "Name of the product feed file."
	}
	
	record UpdateProductFeedSuccess {
		summary "Retrieves the product IDs for each updated product."
		description "Returns an array of product IDs and their associated comparison shopping engine product IDs when the products are successfully updated."

		array<MappedProductId> cseProductIds "An array of the product identifiers and their associated (CSE) Comparison Shopping Engine product identifier.";
	}
	
	record UpdateProductFeedFailure {
		summary "Indicates that products failed to be updated."
		description "Returns the error code and details for the product updating failure."

		string errorCode "Error code and details of the update failure.";
	}
}
