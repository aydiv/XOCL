/**
 * This is a autogenerated using the com.x.ocl:xocl-maven-plugin:1.4.10 maven plugin.
 * The contents are generated from the following XOCL files:
 *            comparisonshopping.contracts.xocl
 *            comparisonshopping.version.xocl
 *            comparisonshopping.transactions.xocl
 *            comparisonshopping.processes.xocl
 *            comparisonshopping.messages.xocl
 * DO NOT EDIT THIS FILE DIRECTLY
 */
@namespace("com.x.comparisonshopping.v1")
@status("workingdraft")
protocol com_x_comparisonshopping_v1 {
	import idl "com.x.core.v1.avdl";

	@topics("/com.x.comparisonshopping.v1/PublishStoreFeed/PublishStoreSuccess")
	@version("1.1.2")
	record PublishStoreSuccess {
		string feedId;
 		string storeId;
 		union{null,string} cseStoreId = null;
  	}

	enum DataFeedType {
		FULL,
		INCREMENTAL,
		UPDATE
	}

	@topics("/com.x.comparisonshopping.v1/PublishStoreFeed/StartDataFeed /com.x.comparisonshopping.v1/PublishInventoryFeed/StartDataFeed /com.x.comparisonshopping.v1/PublishProductFeed/StartDataFeed")
	@version("1.1.2")
	record StartDataFeed {
		string id;
 		union{null,string} name = null;
 		DataFeedType feedType = "com.x.xocl.domainmodel.impl.EnumLiteralImpl@5548e514 (name: FULL, description: The classification of this feed being started.)";
 		//A string representing the date and time as defined by RFC 3339's 'date-time' format with 'time-secfrac' defined.
		string startDate;
 		union{null,string} xAccountId = null;
  	}

	enum ConditionType {
		NEW,
		RECONDITIONED,
		USED
	}

	enum ImagePurpose {
		HERO,
		GALLERY,
		THUMBNAIL
	}

	@topics("/com.x.comparisonshopping.v1/PublishProductFeed/PublishProductFailure")
	@version("1.1.2")
	record PublishProductFailure {
		string feedId;
 		string errorCode;
  	}

	@topics("/com.x.comparisonshopping.v1/PublishStoreFeed/CompleteDataFeedFailure /com.x.comparisonshopping.v1/PublishInventoryFeed/CompleteDataFeedFailure /com.x.comparisonshopping.v1/PublishProductFeed/CompleteDataFeedFailure")
	@version("1.1.2")
	record CompleteDataFeedFailure {
		string id;
  	}

	@topics("/com.x.comparisonshopping.v1/PublishInventoryFeed/ProductInventoryFeedProcessed")
	@version("1.1.2")
	record ProductInventoryFeedProcessed {
		string feedId;
 		array<string> statusValues;
  	}

	@topics("/com.x.comparisonshopping.v1/PublishProductFeed/ProductFeedProcessed")
	@version("1.1.2")
	record ProductFeedProcessed {
		string feedId;
 		array<string> statusValues;
  	}

	enum ImageBackgroundType {
		HAS_BACKGROUND,
		NO_BACKGROUND,
		UNKNOWN
	}

	record ProductImage {
		string imageUrl;
 		ImagePurpose imagePurpose;
 		ImageBackgroundType backgroundType;
  	}

	@topics("/com.x.comparisonshopping.v1/PublishStoreFeed/PublishStoreFailure")
	@version("1.1.2")
	record PublishStoreFailure {
		string feedId;
 		string storeId;
 		string errorCode;
  	}

	record Store {
		string storeId;
 		union{null,string} name = null;
 		union{null,string} storeDescription = null;
 		com.x.core.v1.Address address;
 		union{null,string} latitude = null;
 		union{null,string} longitude = null;
 		string phone;
 		union{null,string} tollFreePhone = null;
 		union{null,array<string>} hoursOfOperation = null;
 		union{null,string} category = null;
 		string currency;
 		//A string representing the date and time as defined by RFC 3339's 'date-time' format with 'time-secfrac' defined.
		union{null,string} establishedDate = null;
 		union{null,array<string>} paymentOptions = null;
 		union{null,string} email = null;
 		union{null,array<string>} brands = null;
 		boolean shipFromStore = false;
 		boolean eligibleForInStorePickup = false;
 		boolean onlineStore = false;
 		union{null,string} onlineStoreUrl = null;
 		union{null,array<string>} photoUrls = null;
 		union{null,string} logoUrl = null;
 		union{null,array<string>} services = null;
  	}

	@topics("/com.x.comparisonshopping.v1/PublishStoreFeed/PublishStore")
	@version("1.1.2")
	record PublishStore {
		string feedId;
 		Store store;
  	}

	record ProductAttribute {
		string id;
 		string label;
 		string value;
  	}

	@topics("/com.x.comparisonshopping.v1/PublishInventoryFeed/PublishProductInventoryFailure")
	@version("1.1.2")
	record PublishProductInventoryFailure {
		string feedId;
 		string errorCode;
  	}

	@topics("/com.x.comparisonshopping.v1/PublishProductFeed/PublishProductSuccess")
	@version("1.1.2")
	record PublishProductSuccess {
		string feedId;
 		string sku;
 		union{null,string} cseProductId = null;
  	}

	@topics("/com.x.comparisonshopping.v1/PublishStoreFeed/StoreFeedProcessed")
	@version("1.1.2")
	record StoreFeedProcessed {
		string feedId;
 		array<string> statusValues;
  	}

	@topics("/com.x.comparisonshopping.v1/PublishStoreFeed/CompleteDataFeed /com.x.comparisonshopping.v1/PublishInventoryFeed/CompleteDataFeed /com.x.comparisonshopping.v1/PublishProductFeed/CompleteDataFeed")
	@version("1.1.2")
	record CompleteDataFeed {
		string id;
  	}

	@topics("/com.x.comparisonshopping.v1/PublishStoreFeed/StartDataFeedSuccess /com.x.comparisonshopping.v1/PublishInventoryFeed/StartDataFeedSuccess /com.x.comparisonshopping.v1/PublishProductFeed/StartDataFeedSuccess")
	@version("1.1.2")
	record StartDataFeedSuccess {
		string id;
 		union{null,string} name = null;
 		//A string representing the date and time as defined by RFC 3339's 'date-time' format with 'time-secfrac' defined.
		string startDate;
  	}

	@topics("/com.x.comparisonshopping.v1/PublishStoreFeed/StartDataFeedFailure /com.x.comparisonshopping.v1/PublishInventoryFeed/StartDataFeedFailure /com.x.comparisonshopping.v1/PublishProductFeed/StartDataFeedFailure")
	@version("1.1.2")
	record StartDataFeedFailure {
		string id;
 		union{null,string} name = null;
 		//A string representing the date and time as defined by RFC 3339's 'date-time' format with 'time-secfrac' defined.
		string startDate;
  	}

	@topics("/com.x.comparisonshopping.v1/PublishStoreFeed/CompleteDataFeedSuccess /com.x.comparisonshopping.v1/PublishInventoryFeed/CompleteDataFeedSuccess /com.x.comparisonshopping.v1/PublishProductFeed/CompleteDataFeedSuccess")
	@version("1.1.2")
	record CompleteDataFeedSuccess {
		string id;
 		//A string representing the date and time as defined by RFC 3339's 'date-time' format with 'time-secfrac' defined.
		string startDate;
  	}

	record Variation {
		union{null,string} id = null;
 		string name;
 		string value;
  	}

	@topics("/com.x.comparisonshopping.v1/PublishInventoryFeed/PublishProductInventorySuccess")
	@version("1.1.2")
	record PublishProductInventorySuccess {
		string feedId;
 		union{null,string} productSku = null;
 		union{null,string} storeId = null;
  	}

	record Shipping {
		string country;
 		string region;
 		string service;
 		com.x.core.v1.CurrencyAmount price;
  	}

	record TaxRate {
		string country;
 		string region;
 		double rate;
 		boolean taxShipping;
  	}

	enum AvailabilityType {
		IN_STOCK,
		OUT_OF_STOCK,
		AVAILAILABLE_FOR_ORDER,
		UNKNOWN
	}

	record InventoryByLocation {
		string storeId;
 		string sku;
 		union{null,Store} store = null;
 		boolean pickupAvailable = false;
 		union{null,com.x.core.v1.CurrencyAmount} price = null;
 		union{null,com.x.core.v1.CurrencyAmount} salePrice = null;
 		//A string representing the date and time as defined by RFC 3339's 'date-time' format with 'time-secfrac' defined.
		union{null,string} salePriceEffectiveDate = null;
 		//A string representing the date and time as defined by RFC 3339's 'date-time' format with 'time-secfrac' defined.
		union{null,string} salePriceExpiryDate = null;
 		union{null,string} priceDescription = null;
 		union{null,int} quantity = null;
 		AvailabilityType availabile = "com.x.xocl.domainmodel.impl.EnumLiteralImpl@4df5a4d8 (name: Unknown, description: True with no quantity specified if inventory is not tracked.)";
 		//A string representing the date and time as defined by RFC 3339's 'date-time' format with 'time-secfrac' defined.
		union{null,string} availableDate = null;
 		boolean shipFromStore = false;
  	}

	@topics("/com.x.comparisonshopping.v1/PublishInventoryFeed/PublishProductInventory")
	@version("1.1.2")
	record PublishProductInventory {
		string feedId;
 		InventoryByLocation inventory;
  	}

	record Product {
		string sku;
 		union{null,string} itemGroup = null;
 		com.x.core.v1.CurrencyAmount price;
 		int quantity;
 		string title;
 		string productDescription;
 		union{null,string} manufacturer = null;
 		union{null,string} mpn = null;
 		union{null,string} gtin = null;
 		string brand;
 		union{null,string} category = null;
 		union{null,string} xProductTypeId = null;
 		union{null,array<string>} productTypes = null;
 		array<ProductImage> images;
 		string link;
 		com.x.core.v1.CurrencyAmount originalPrice;
 		AvailabilityType availability = "com.x.xocl.domainmodel.impl.EnumLiteralImpl@1c5487ae (name: Unknown, description: Availability status of the product. The values are InStock, AvailableForOrder, or Unknown.)";
 		union{null,TaxRate} taxRate = null;
 		union{null,Shipping} shipping = null;
 		union{null,double} shippingWeight = null;
 		union{null,array<ProductAttribute>} attributes = null;
 		union{null,array<Variation>} variations = null;
 		union{null,com.x.core.v1.CurrencyAmount} cpc = null;
 		union{null,string} channelId = null;
 		union{null,array<InventoryByLocation>} inventoryByLocation = null;
 		ConditionType condition = "com.x.xocl.domainmodel.impl.EnumLiteralImpl@4f5ebe9d (name: NEW, description: The condition of the product)";
 		string language = "en_US";
 		boolean onlineOnly = true;
  	}

	@topics("/com.x.comparisonshopping.v1/PublishProductFeed/PublishProduct")
	@version("1.1.2")
	record PublishProduct {
		string feedId;
 		Product product;
  	}


}