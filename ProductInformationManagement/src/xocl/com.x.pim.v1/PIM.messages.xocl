package com.x.pim.v1 
{
	import com.x.core.v1.*
	
	record Product extends ProductData
    {
        summary "The primary record of the capability. The base record that represents a product. Extends ProductData."
        string id;
    }
    
    record  ProductData
    {
    	// ID of the product type 
        string? productTypeId;
        // descriptive name
        array<LocalizedString>? name;
        // short description
        array<LocalizedString>? shortDescription;
        // full description
        array<LocalizedString>? _AVDL_description;
        string? GTIN;
        array<LocalizedString>? brand;
        array<LocalizedString>? manufacturer;
        string? MPN;
        // Manufacturer suggested retail price
        CurrencyAmount? MSRP;
        // Minimal advertisement price
        CurrencyAmount? MAP;
        // product images 
        array<Image>? images;
        // product attributes 
        array<ProductAttributeValue>? attributes;
        // defines the ids of variation variables 
        array<string>? variationFactors;
       	// list of associated SKUs
        array<SKU>? skuList;   
    }
     
    record ProductAttributeValue
    {
    	string attributeId;
        union {ProductTypeAttributeValue, CustomAttributeValue} attributeValue;
    }
    
    record CustomAttributeValue 
    {
		union {null, BooleanAttributeValue, StringAttributeValue, MeasurementAttributeValue} value = null;
    }
 	
    record ProductTypeAttributeValue
    {
        union {ProductTypeStringAttributeValue, StringEnumerationAttributeValue, BooleanAttributeValue} value;
    }
    
    record LocalizedString 
    {
 		Locale? locale;
  		string stringValue;
 	}
 	 
	record LocalizedMeasurement 
	{
		Locale? locale;
		string name;
		string unit;
		string value;
	}
	
 	record LocalizedNameValue 
 	{
 		Locale? locale;
 		string name;
 		string value;
 	}
 	
	enum ProductIdType 
	{
		PRODUCT_ID,
		SKU
	}
	
	record ProductIdentifier 
	{
		string value;
		ProductIdType type;
	}
	
    record BooleanAttributeValue
    {
        boolean value;
        array<LocalizedString>? attributeName;
    }
 
 	record StringAttributeValue 
 	{
 		array<LocalizedNameValue> attributeNameValue;
 	}
 	
 	record MeasurementAttributeValue 
 	{
 		array<LocalizedMeasurement> localizedMeasurementValue;
 	}
 	
    record StringEnumerationAttributeValue
    {
    	// valueId is the id of the value defined in ProductTaxonomy StringEnumeration 
    	array<string> valueId;
        // this localized value will be populated by capability 
        map<StringAttributeValue>? attributeValues;
    }
 
    record ProductTypeStringAttributeValue
    {
    	// a string attribute value can optionally refer to 
    	// a predefined value in ProductTaxonomy, or it can be localized name/value pair 
        string? valueId;
        // this localized value can be populated by capability if valueId is present 
        // if valueId is not present, the localized values can be populated by requester 
        StringAttributeValue? attributeValue;
    }
    
    enum ImageTag{
    	THUMBNAIL
    }
  
    record Image
    {
        string url;
   	 	// height in pixel
   	 	int? height;
    	// width in pixel
        int? width;
    	LocalizedString? label;
    	LocalizedString? altText;
    	array<ImageTag>? tags;
    }
   
   
	enum ProductIdType 
	{
		PRODUCT_ID,
		SKU
	}
	
    record SearchProduct
    {
    	summary "Requests a search for specific products."
    	description "Requests a search for specific products using a query of type Product. Contains an (optional) array of locales. The default locale is en_US if one isn't specified."
        Query _AVDL_query "The search query of type Product."; //@queryType("com.x.pim.v1.Product")
        array<Locale> ? locales "The (optional) array of locales to search in. The default locale is en_US if one isn't specified.";
    }
 
    record SearchProductSucceeded
    {
    	summary "Signals that a search for specific products succeeded."
    	description "Signals that a search for specific products succeeded. Returns the result of the query. Also returns the original search query and locales specified."
        Query _AVDL_query "The original search query."; 
        // The locale en_US will be the default if no locale is supplied in 
        // the message.
        array<Locale> ? locales "The array of locales associated with the search query, if any. The default locale is en_US if one isn't specified.";
        QueryResult queryResult "The search results.";
    }
 
    record SearchProductFailed
    {
    	summary "Signals that a search for specific products failed."
    	description "Signals that a search for specific products succeeded. Returns the original search query and any locales specified."
        Query _AVDL_query "The original search query.";
        array<Locale> ? locales "The array of locales associated with the search query, if any. The default locale is en_US if one isn't specified.";
        array<Error> errors "The array of error information associated with the failure. Contains information useful for troubleshooting.";
    }
     
    
    record SKU
    {
    	//unique identifier of the SKU.  This is supplied by the merchant and not generated by the system
        string sku;
        // ID of the product for this SKU.  This required in all cases except product creation
        string? productId;
        // Manufacturer suggested retail price, override the field in Product
        CurrencyAmount? MSRP;
        // Minimal advertisement price, override the field in Product
        CurrencyAmount? MAP;
        // variation attributes, the list must match the variationAttributeIds in Product 
        array<ProductAttributeValue>? variationAttributeValues;
        // SKU specific images 
        array<Image>? images;     
    }
    
    
    enum FilterType 
    {
        SUMMARY,
        FULL_DETAILS
    }
    
    record LookupProduct
    {
    	summary "Requests the lookup of specific products."
    	description "Requests the lookup of specific products by their IDs. Contains an (optional) filter. Also contains an (optional) array of locales."
        array<ProductIdentifier> ids "The IDs of the products to be looked up.";
        FilterType? filter "The (optional) filter."; 
        array<Locale> ? locales "The (optional) array of locales. The locale en_US is the default if no locale is specified";
    }
 
    record LookupProductSucceeded
    {
    	summary "Signals that specific products were successfully looked up."
    	description "Signals that specific products were successfully looked up by their IDs. Contains the array of products that were looked up. Also contains the (optional) filter and locale(s) that were specified in the original lookup."
        array<Product> products "The array of products that were successfully looked up.";
        FilterType? filter "The (optional) filter."; 
        array<Locale>? locales "The (optional) array of locales. The locale en_US is the default if no locale was supplied in the original request message.";
    }
    
    record LookupProductFailed
    {
    	summary "Signals that specific products couldn't be looked up."
    	description "Signals that specific products couldn't be looked up by their IDs (in conjunction with a filter)."
        array<ProductIdentifier> ids "The array of product IDs that couldn't be looked up.";
        FilterType? filter "The (optional) filter."; 
        array<Locale>? locales "The (optional) array of locales. The locale en_US is the default if no locale was supplied in the original request message.";
        array<Error> errors "The array of error information that provides details about the lookup failure that are useful for troubleshooting.";
    }
    
    record UpdateProduct
    {
    	summary "Requests the update of specific products."
    	description "Requests the update of specific products. If one product in the array cannot be updated, the request fails."
        array<Product> products "The array that contains the products requested to be updated.";
    }
   
    record UpdateProductSucceeded
    {
    	summary "Signals the update of specific products."
    	description "Signals the update of specific products. Contains the array of products that were successfully updated."
        array<Product> products "The array of products that were successfully updated.";
    }
    
    record UpdateProductFailed
    {
    	summary "Signals that specific products couldn't be updated."
    	description "Signals that specific products couldn't be updated. Contains the array of products that couldn't be updated. Also contains error information about the transaction useful in troubleshooting."
        array<Product> products "The products that couldn't be updated.";
        array<Error> errors "Error information about the transaction useful in troubleshooting.";
    }

    record ProductUpdated
    {
    	summary "Notifies an observer that products have been updated."
    	description "Notifies an observer that products have been updated."
        array<Product> productChanges "The array of products that were updated.";
    }
    	
    record CreateProductWithId
    {
    	summary "Requests creation of one or more products with unique IDs."
    	description "Requests creation of one or more products with an array of ProductData. Called by the consumer. Triggers /com.x.pim.v1/ProductCreation/CreateProductSucceeded upon success or /com.x.pim.v1/ProductCreation/CreateProductFailed upon failure."
        array<Product> products "The array of products with unique IDs requested to be created.";
    }

    record CreateProduct
    {
    	summary "Requests creation of product data."
    	description "Requests creation of one or more products with an array of ProductData. Called by the consumer. Triggers /com.x.pim.v1/ProductCreation/CreateProductSucceeded upon success or /com.x.pim.v1/ProductCreation/CreateProductFailed upon failure."
        array<ProductData> products "The array of product data requested to be created.";
    }
 
    record CreateProductSucceeded
    {
    	summary "Returns one or more newly created products."
    	description "Returns one or more products that were created by /com.x.pim.v1/ProductCreation/CreateProduct. Received by the consumer."
    	array<Product> products "The array of products that were created.";
    }
 
    record CreateProductFailed
    {
    	summary "Signals that creation of the data of one or more products has failed."
    	description "Signals that creation of one or more products has failed. Received by the consumer. Returned after calling /com.x.pim.v1/ProductCreation/CreateProduct. Returns the products passed into the topic by the requestor. Contains information about the failure useful for troubleshooting."
        array<ProductData> products "The array of product data that couldn't be created.";
        array<Error> errors "The array of error information about the failure to create product data."
    }
    
    record ProductCreated
    {
    	summary "Notifies an observer that one or products were created."
    	description "The message contains the array of products that were created."
        array<Product> products "The array of products that were created.";
    }
    
    record DeleteProduct
    {
    	summary "Requests deletion of products specified by their IDs."
    	description "Requests deletion of one or more products specified by their IDs. Called by the consumer. Triggers /com.x.pim.v1/ProductDeletion/DeleteProductSucceeded upon success or /com.x.pim.v1/ProductDeletion/DeleteProductFailed upon failure."
        array<string> productIds "The array of product IDs that reference the products to be deleted.";
    }
    
    record DeleteProductSucceeded
    {
    	summary "Signals that a request to delete one or more products using their IDs has succeeded."
    	description "Signals that a request to delete one or more products using their IDs has succeeded. Returns the array of product IDs specified in DeleteProduct by the requestor."
        array<string> productIds "The array of product IDs that reference the products that were deleted.";
    }
    
    record DeleteProductFailed
    {
    	summary "Signals that a request to delete one or more products using their IDs has succeeded."
    	description "Signals that a request to delete one or more product using their IDs has succeeded. Returned after calling /com.x.pim.v1/ProductDeletion/DeleteProduct and contains the array of product IDs specified in DeleteProduct by the requestor. Contains information about the failure useful for troubleshooting."
        array<string> productIds "The array of product IDs that reference the products that weren't deleted.";
        array<Error> errors "The array of error information about the failure to delete products.";
    }
    
    record ProductDeleted
    {
    	summary "Notifies an observer that one or more products were deleted."
		description "Notifies an observer that one or more products were deleted. The message contains the array of products that were deleted."
        array<Product> products "The array of products that were deleted.";
    }
    
    record CreateSKU
    {
    	summary "Requests creation of new Stock Keeping Units (SKUs)."
    	description "Requests creation of new Stock Keeping Units (SKUs). The SKU value is determined on a per-merchant basis. A product can have one or more SKUs."
        array<SKU> sku "The array of SKUs to be created.";
    }
    
    record CreateSKUFailed
    {
    	summary "Signals that a request to create new SKUs has failed."
    	description "Signals that a request to create new SKUs has failed. The message contains the array of SKUs specified in CreateSKU by the requestor. It also contains error information useful in troubleshooting."
        array<SKU> skus "The array of SKUs that couldn't be created.";
        array<Error> errors "The array of error information that provides detail regarding why the SKUs couldn't be created.";
    }

    record CreateSKUSucceeded
    {
    	summary "Signals that a request to create new SKUs has succeeded."
    	description "Signals that a request to create new SKUs has succeeded. The message contains the array of SKUs specified in CreateSKU by the requestor."
        array<SKU> sku "The array of SKUs that were created.";
    }
    
    record UpdateSKU
    {
    	summary "Requests the update of specific SKUs."
    	description "Requests the update of specific SKUs. The new SKU values are determined by the merchant."
        array<SKU> skus "The array of SKUs to be updated.";
    }
    
    record UpdateSKUSucceeded
    {
    	summary "Signals that a request to update specific SKUs succeeded."
    	description "Signals that a request to update specific SKUs succeeded. Contains the array of SKUs specified in UpdateSKU by the requestor."
        array<SKU> skus "The array of SKUs that were successfully updated.";
    }
 
    record UpdateSKUFailed
    {
    	summary "Signals that a request to update specific SKUs failed."
    	description "Signals that a request to update specific SKUs failed. Contains the array of SKUs specified in UpdateSKU by the requestor. It also contains error information useful in troubleshooting."
        array<SKU> skus "The array of SKUs that couldn't be updated.";
        array<Error> errors "The array of error information that provides detail regarding why the SKUs couldn't be updated.";
    }	
    
    record DeleteSKU
    {
    	summary "Requests the deletion of specific SKUs."
    	description "Requests the deletion of specific SKUs specified by the merchant."
        array<string> skus "The array of SKUs to be deleted.";
    }
    
    record DeleteSKUSucceeded
    {
    	summary "Signals that a request to delete specific SKUs succeeded."
    	description "Signals that a request to delete specific SKUs succeeded. Contains the array of SKUs specified in DeleteSKU."
    	array<string> skus "The array of SKUs that were deleted.";
    }

    record DeleteSKUFailed
    {
    	summary "Signals that a request to delete specific SKUs failed."
    	description "Signals that a request to delete specific SKUs failed. Contains the array of SKUs specified in DeleteSKU. It also contains error information useful in troubleshooting."
        array<string> skus "The array of SKUs that couldn't be deleted.";
        array<Error> errors "The array of error information that provides detail regarding why the SKUs couldn't be deleted.";
    }
    
}