package com.x.pim.v1 
{
	import com.x.core.v1.*
	
	record Product extends ProductData
    {
        summary "Contains additional information for the ProductData record."
        description "Captures the unique identifier that represents a product, which is added to ProductData." 
        string id "Unique identifier of a product.";
    }
    
    record  ProductData
    {
    	summary "Contains information that represents a product "
    	description "Captures all the product information needed to represent a product, such as quantity, title, SKU, category, etc."
        string? productTypeId "Unique identifier of the product type.";
        array<LocalizedString>? name "Descriptive names for the product.";
        array<LocalizedString>? shortDescription "Breif description of the product.";
        array<LocalizedString>? _AVDL_description "Full description of the product.";
        string? GTIN "GTIN (Global Trade Item Number) identifier for the product.";
        array<LocalizedString>? brand "Brand of the product, such as iPod.";
        array<LocalizedString>? manufacturer "Manufacturer of the product, such as Apple.";
        string? MPN "Manufacturer part number of the product.";
        CurrencyAmount? MSRP "Manufacturer suggested retail price.";
        CurrencyAmount? MAP "Minimal advertisement price.";
        array<Image>? images "Array of images of the product.";
        array<ProductAttributeValue>? attributes "Values of the product attributes.";
        array<string>? variationFactors "Unique identifiers of the product variations.";
        array<SKU>? skuList "Array of the SKUs of associated products.";   
    }
     
    record ProductAttributeValue
    {
    	summary "Contains the product attribute value."
    	description "Captures the attribute ID and either the product type or custom attribute value."
    	string attributeId "Unique attribute identifier of the product.";
        union {ProductTypeAttributeValue, CustomAttributeValue} attributeValue "Product type attribute or custom attribute value of the product.";
    }
    
    record CustomAttributeValue 
    {
    	summary "Contains the custom attribute value."
    	description "Captures the custom attribute value of a product."
		union {null, BooleanAttributeValue, StringAttributeValue, MeasurementAttributeValue} value = null "Custom attribute value of the product.";
    }
 	
    record ProductTypeAttributeValue
    {
    	summary "Contains the product type attribute value."
    	description "Captures the product type attribute value."
        union {ProductTypeStringAttributeValue, StringEnumerationAttributeValue, BooleanAttributeValue} value "Product type attribute value.";
    }
    
    record LocalizedString 
    {
    	summary "Contains the location of the product."
    	description "Captures the country and language used where the product is located."
 		Locale? locale "County and language for the product. The format for locale is aa_BB, where aa is a 2-letter language code (ISO 639-1) and BB is a 2-letter country code (ISO 3166). For example, fr_FR ( French/France) or ja_JP  (Japanese/Japan). If this is not provided, en_US is used.";
  		string stringValue "Name of the country where the product is located.";
 	}
 	 
	record LocalizedMeasurement
	{
    	summary "Reserved for future use."
    	description "Reserved for future use."
 		Locale? locale "County and language for the measurement unit. The format for locale is aa_BB, where aa is a 2-letter language code (ISO 639-1) and BB is a 2-letter country code (ISO 3166). For example, fr_FR ( French/France) or ja_JP  (Japanese/Japan). If this is not provided, en_US is used.";
		string name "Reserved for future use.";
		string unit "Reserved for future use.";
		string value "Reserved for future use.";
	}
	
 	record LocalizedNameValue
 	{
    	summary "Reserved for future use."
    	description "Reserved for future use."
 		Locale? locale "County and language. The format for locale is aa_BB, where aa is a 2-letter language code (ISO 639-1) and BB is a 2-letter country code (ISO 3166). For example, fr_FR ( French/France) or ja_JP  (Japanese/Japan). If this is not provided, en_US is used.";
 		string name "Reserved for future use.";
 		string value "Reserved for future use.";
 	}
 	
	enum ProductIdType 
	{
    	summary "Specifies the product ID type."
    	description "Defines the values used to specify the product ID type."
		PRODUCT_ID "Unique identifier of a product.", 
		SKU "Standardized SKU (Stock Keeping Unit) of the product. This is a unique number supplied by the merchant."
	}
	
	record ProductIdentifier 
	{
    	summary "Contains the product identifier and its type."
    	description "Captures the value of the product identifier and its type, which can be either the a unique ID generated by the merchant or the SKU of the product." //?? is all this correct?
		string value "Value to use as the product identifier.";
		ProductIdType type "What is being used as a product type.";
	}
	
    record BooleanAttributeValue
    {
    	summary "TBD"
    	description "TBD"
        boolean value "TBD";
        array<LocalizedString>? attributeName "TBD";
    }
 
 	record StringAttributeValue 
 	{
    	summary "TBD"
    	description "TBD"
 		array<LocalizedNameValue> attributeNameValue "TBD";
 	}
 	
 	record MeasurementAttributeValue 
 	{
    	summary "TBD"
    	description "TBD"
 		array<LocalizedMeasurement> localizedMeasurementValue "TBD";
 	}
 	
    record StringEnumerationAttributeValue
    {
    	summary "TBD"
    	description "TBD"
    	array<string> valueId "ID of the attribute value defined in ProductTaxonomy StringEnumeration.";
        // this localized value will be populated by capability 
        map<StringAttributeValue>? attributeValues "TBD";
    }
 
    record ProductTypeStringAttributeValue
    {
    	summary "Contains the product type value ID and attribute value."
    	description "A product type string attribute value can optionally refer to a predefined value in the ProductTaxonomy, or it can be a localized name/value pair."
        string? valueId "Product type value ID.";
        StringAttributeValue? attributeValue "A localized value that can be populated by capability if valueId is present. If the valueId is not present, the localized values can be populated by the requester.";
    }
    
    enum ImageTag{
		summary "Specifies the product image tag."
		description "Defines the values that can be used to tag a product image."
    	THUMBNAIL "Indicates this is a thumbnail image."
    }
  
    record Image
    {
    	summary "Information about an image of a product."
    	description "Captures the URL, size, localized information and tag of an image."
        string url "URL of the product image.";
   	 	int? height "Height in pixels of the image.";
        int? width "Width in pixels of the image.";
    	LocalizedString? label "Localized label for the image.";
    	LocalizedString? altText "Localized HTML alt attribute text for the image.";
    	array<ImageTag>? tags "Array of tags for the image.";
    }
   
    record SearchProduct
    {
       	summary "Requests a search for specific products."
    	description "Requests a search for specific product types and optionally limit the search by locale. If locale is not provided, en_US is used."
        Query _AVDL_query "Search query for product type.";
        array<Locale> ? locales "Optional array of locales to search for. The format for locale is aa_BB, where aa is a 2-letter language code (ISO 639-1) and BB is a 2-letter country code (ISO 3166). For example, fr_FR ( French/France) or ja_JP  (Japanese/Japan). If this is not provided, en_US is used.";
    }
 
    record SearchProductSucceeded
    {
    	summary "Signals that a search for specific products succeeded."
    	description "Returns the results of the query. Also returns the original search query and any locales specified."
        Query _AVDL_query "Original search query."; 
        array<Locale> ? locales "Array of locales associated with the search query. If this is not provided, en_US is used.";
        QueryResult queryResult "The search results.";
    }
 
    record SearchProductFailed
    {
    	summary "Signals that a search for specific products failed."
    	description "Returns the original search query and any locales specified."
        Query _AVDL_query "Original search query.";
        array<Locale> ? locales "Array of locales associated with the search query. If this is not provided, en_US is used.";
		array<Error> errors "Array of the errors that occurred. Each error consists of an error code and error message, which is useful for troubleshooting. Your application can use error codes as identifiers in your customized error-handling algorithms.";
    }
     
    
    record SKU
    {
    	summary "Contains information used to create SKUs." 
    	description "Captures information needed to create a SKU. It will override the values for MSRP and MAP in Product."
        string sku "Standardized SKU (Stock Keeping Unit) of the product. This is a unique number supplied by the requestor.";
        string? productId "Unique identifier of the product. Note: This is required in all cases except product creation.";
        CurrencyAmount? MSRP "Manufacturer suggested retail price. Note: This overrides the MSRP field in Product.";
        CurrencyAmount? MAP "Minimal advertisement price.  Note: This overrides the MAP field in Product.";
        array<ProductAttributeValue>? variationAttributeValues "Array of product variation attributes. Note: This list must match the variationAttributeIds in Product.";
        array<Image>? images "Product images specific to this SKU.";     
    }
    
    
    enum FilterType 
    {
    	summary "Results filter type."
    	description "Defines the filter types for the search results."
        SUMMARY "Filters the search results to return summary information.",
        FULL_DETAILS "Doesn't filter the search results; returns all information."
    }
    
    record LookupProduct
    {
    	summary "Requests the lookup of specific products."
    	description "Requests the lookup of specific products by their IDs. Contains an optional type filter and an optional locale filter."
        array<ProductIdentifier> ids "IDs of the products to be looked up.";
        FilterType? filter "Type of filter to be used on the results of the search."; 
        array<Locale> ? locales "Optional array of locales. The format for locale is aa_BB, where aa is a 2-letter language code (ISO 639-1) and BB is a 2-letter country code (ISO 3166). For example, fr_FR ( French/France) or ja_JP  (Japanese/Japan). If this is not provided, en_US is used.";
    }
 
    record LookupProductSucceeded
    {
    	summary "Signals that specific products were successfully looked up."
    	description "Signals that specific products were successfully looked up by their IDs. Returns an array of products that were found. Also contains the (optional) type filter and locale(s) if any that were specified in the original lookup."
        array<Product> products "Array of products that were successfully looked up.";
        FilterType? filter "Type of filter to be used on the results of the search."; 
        array<Locale>? locales "Array of locales used on the results of the search. The format for locale is aa_BB, where aa is a 2-letter language code (ISO 639-1) and BB is a 2-letter country code (ISO 3166). For example, fr_FR ( French/France) or ja_JP  (Japanese/Japan). If this is not provided, en_US is used.";
    }
    
    record LookupProductFailed
    {
    	summary "Signals that specific products couldn't be looked up."
    	description "Signals that specific products couldn't be looked up by their IDs (in conjunction with a filter)."
        array<ProductIdentifier> ids "Array of product IDs that couldn't be looked up.";
        FilterType? filter "Type of filter to be used on the results of the search."; 
        array<Locale>? locales "Array of locales used on the results of the search. The format for locale is aa_BB, where aa is a 2-letter language code (ISO 639-1) and BB is a 2-letter country code (ISO 3166). For example, fr_FR ( French/France) or ja_JP  (Japanese/Japan). If this is not provided, en_US is used.";
		array<Error> errors "Array of the errors that occurred. Each error consists of an error code and error message, which is useful for troubleshooting. Your application can use error codes as identifiers in your customized error-handling algorithms.";
    }
    
    record UpdateProduct
    {
    	summary "Requests the update of specific products."
    	description "Requests the update of specific products. If one product in the array cannot be updated, the request fails."
        array<Product> products "Array that contains the products to be updated.";
    }
   
    record UpdateProductSucceeded
    {
    	summary "Signals the update of specific products."
    	description "Signals the update of specific products and returns an array of the products that were successfully updated."
        array<Product> products "Array of products that were successfully updated.";
    }
    
    record UpdateProductFailed
    {
    	summary "Signals that specific products couldn't be updated."
    	description "Returns an array of products that couldn't be updated. Also contains error information about the transaction useful in troubleshooting."
        array<Product> products "Products that couldn't be updated.";
		array<Error> errors "Array of the errors that occurred. Each error consists of an error code and error message, which is useful for troubleshooting. Your application can use error codes as identifiers in your customized error-handling algorithms.";
    }

    record ProductUpdated
    {
    	summary "Signals that products have been updated."
    	description "Notifies an observer that products have been updated."
        array<Product> productChanges "Array of products that were updated.";
    }
    	
    record CreateProductWithId
    {
    	summary "Requests creation of one or more products with unique IDs."
    	description "Requests creation of one or more products with an array of ProductData."
        array<Product> products "Array of products with unique IDs requested to be created.";
    }

    record CreateProduct
    {
    	summary "Requests creation of product data."
    	description "Requests creation of one or more products with an array of ProductData."
        array<ProductData> products "Array of product data requested to be created.";
    }
 
    record CreateProductSucceeded
    {
    	summary "Signals that the request to create one or more products was successful."
    	description "Signals that the request to create one or more products was successful and returns an array of the products that were created."
    	array<Product> products "Array of products that were created.";
    }
 
    record CreateProductFailed
    {
    	summary "Signals that creation of the data of one or more products has failed."
    	description "Signals that creation of one or more products has failed and returns information about the failure useful for troubleshooting."
        array<ProductData> products "Array of product data that couldn't be created.";
		array<Error> errors "Array of the errors that occurred. Each error consists of an error code and error message, which is useful for troubleshooting. Your application can use error codes as identifiers in your customized error-handling algorithms.";
    }
    
    record ProductCreated
    {
    	summary "Signals that one or more products were created."
    	description "Notifies observers that product were created and returns an array of the products that were created."
        array<Product> products "Array of products that were created.";
    }
    
    record DeleteProduct
    {
    	summary "Requests deletion of products specified by their IDs."
    	description "Requests deletion of one or more products specified by their IDs."
        array<string> productIds "Array of product IDs that reference the products to be deleted.";
    }
    
    record DeleteProductSucceeded
    {
    	summary "Signals that a request to delete one or more products using their IDs has succeeded."
    	description "Signals that a request to delete one or more products using their IDs has succeeded and returns the array of product IDs that were deleted."
        array<string> productIds "Array of product IDs that reference the products that were deleted.";
    }
    
    record DeleteProductFailed
    {
    	summary "Signals that a request to delete one or more products using their IDs has failed."
    	description "Signals that a request to delete one or more product using their IDs has failed and returns information about the failure useful for troubleshooting."
        array<string> productIds "Array of product IDs that reference the products that weren't deleted.";
		array<Error> errors "Array of the errors that occurred. Each error consists of an error code and error message, which is useful for troubleshooting. Your application can use error codes as identifiers in your customized error-handling algorithms.";
    }
    
    record ProductDeleted
    {
    	summary "Signals that one or more products were deleted."
		description "Notifies an observer that one or more products were deleted and returns an array of products that were deleted."
        array<Product> products "Array of products that were deleted.";
    }
    
    record CreateSKU
    {
    	summary "Requests creation of new Stock Keeping Units (SKUs)."
    	description "Requests creation of new Stock Keeping Units (SKUs). The SKU value is determined on a per-merchant basis. A product can have one or more SKUs."
        array<SKU> sku "Array of SKUs to be created.";
    }
    
    record CreateSKUFailed
    {
    	summary "Signals that a request to create new SKUs has failed."
    	description "Signals that a request to create new SKUs has failed. It returns an array of SKUs that weren't created and error information useful in troubleshooting."
        array<SKU> skus "Array of SKUs that couldn't be created.";
		array<Error> errors "Array of the errors that occurred. Each error consists of an error code and error message, which is useful for troubleshooting. Your application can use error codes as identifiers in your customized error-handling algorithms.";
    }

    record CreateSKUSucceeded
    {
    	summary "Signals that a request to create new SKUs has succeeded."
    	description "Signals that a request to create new SKUs has succeeded. The message contains the array of SKUs specified in CreateSKU by the requestor."
        array<SKU> sku "Array of SKUs that were created.";
    }
    
    record UpdateSKU
    {
    	summary "Requests the update of specific SKUs."
    	description "Requests the update of specific SKUs. The new SKU values are determined by the merchant."
        array<SKU> skus "Array of SKUs to be updated.";
    }
    
    record UpdateSKUSucceeded
    {
    	summary "Signals that a request to update specific SKUs succeeded."
    	description "Signals that a request to update specific SKUs succeeded. Contains the array of SKUs specified in UpdateSKU by the requestor."
        array<SKU> skus "Array of SKUs that were successfully updated.";
    }
 
    record UpdateSKUFailed
    {
    	summary "Signals that a request to update specific SKUs failed."
    	description "Signals that a request to update specific SKUs failed. It returns the array of SKUs specified in UpdateSKU by the requestor. It also contains error information useful in troubleshooting."
        array<SKU> skus "Array of SKUs that weren't updated.";
		array<Error> errors "Array of the errors that occurred. Each error consists of an error code and error message, which is useful for troubleshooting. Your application can use error codes as identifiers in your customized error-handling algorithms.";
    }	
    
    record DeleteSKU
    {
    	summary "Requests the deletion of specific SKUs."
    	description "Requests the deletion of specific SKUs specified by the merchant."
        array<string> skus "Array of SKUs to be deleted.";
    }
    
    record DeleteSKUSucceeded
    {
    	summary "Signals that a request to delete specific SKUs succeeded."
    	description "Signals that a request to delete specific SKUs succeeded. Contains the array of SKUs specified in DeleteSKU."
    	array<string> skus "Array of SKUs that were deleted.";
    }

    record DeleteSKUFailed
    {
    	summary "Signals that a request to delete specific SKUs failed."
    	description "Signals that a request to delete specific SKUs failed. Contains the array of SKUs specified in DeleteSKU. It also contains error information useful in troubleshooting."
        array<string> skus "Array of SKUs that couldn't be deleted.";
		array<Error> errors "Array of the errors that occurred. Each error consists of an error code and error message, which is useful for troubleshooting. Your application can use error codes as identifiers in your customized error-handling algorithms.";
    }
    
}