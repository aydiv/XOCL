package com.x.pim.v1 { 	
    import com.x.pim.v1.*
    
    process ProductSearch{
    	summary "Searches for all products."
		description "A consumer queries the product catalog and gets back all the products."

		roles
		{
			ProductInformationConsumer "The product information consumer submits queries to retrieve product details for products that match the specified criteria."
			ProductInformationManager "The product information manager supplies details for an array of products that match a submitted query."
		}
	
		workflow {
    		summary "Searches for all the products in a product information management system."
			description "A consumer queries the product catalog and gets back all the products."
			transaction SearchProduct {
				roles(ProductInformationConsumer, ProductInformationManager)
			}
		}
	}
	
	process ProductLookup {
    	summary "Searches a product catalog for a single product."
		description "A consumer queries the product catalog and gets a single product back."
		
		roles
		{
			ProductInformationConsumer "The product information consumer submits queries to retrieve product details for specified products."
			ProductInformationManager "The product information manager supplies details for an array of requested products."
		}
	}
	
    workflow ProductLookup implements ProductLookup {
    	summary "Searches a product catalog for a single product in a product information management system."
    	description "A consumer queries the product catalog and gets a single product back."
			transaction LookupProduct {
				roles(ProductInformationConsumer, ProductInformationManager)
			}
		}
	
	process ProductUpdate (Product product, StockKeepingUnit sku){
    	summary "Updates the product information of the products."
		description "A consumer submits a product update request and the manager updates the product information management system and sends a message to notify observers of the updated products."
		
		roles
		{
			ProductInformationConsumer"The product information consumer submits requests to update product details, including adding or deleted SKUs, for specified products."
			ProductInformationManager "The product information manager updates product and product SKU data and informs observers of changes."
			ProductInformationObserver "The product information observer is informed when product details are updated."
		}
		
		preconditions(exists(product))	
	
		workflow {
    		summary "Updates the product information for products in a product information management system."
			description "A consumer submit a product update request. The manager updates the product by one of the following activities: adding a new SKU, updating or deleting an existing SKU, or updating the base product information."
			one {
			
				// A consumer asks the PIM to update a product.  An update, create, or delete of a SKU is considered a product update
				transaction UpdateSKU(sku) {
				   	roles(ProductInformationConsumer,ProductInformationManager)
				}

				// A consumer asks the PIM to update a product.  An update, create, or delete of a SKU is considered a product update
				transaction CreateSKU(sku) {
				   	roles(ProductInformationConsumer,ProductInformationManager)
				}
				
				transaction DeleteSKU(sku) {
				   	roles(ProductInformationConsumer,ProductInformationManager)
				}
		
				// A consumer asks the PIM to update a product
				transaction UpdateProduct {
				   	roles(ProductInformationConsumer,ProductInformationManager)
				}
			}
			
			// The PIM informs an observer that a product was updated
			workflow ProductUpdated {
		    	summary "Informs an observer that a product was updated in a product information management system."
		    	description "A manager sends a message that informs an observer that a product was updated by one of the following activities: adding a new SKU, updating or deleting an existing SKU, or updating the base product information."
			   	roles(ProductInformationManager, ProductInformationObserver)
			}
		}

		postconditions {
			success(exists(product))
		}
	}
	
	process ProductUpdated(Product product){
    	summary "Updates product and product SKU data in a product information management system."
    	description "A manager updates the product and product SKU data and sends a message that informs observers of changes."
		roles
		{
			ProductInformationManager "The product information manager updates product and product SKU data and informs observers of changes."
			ProductInformationObserver "The product information observer is informed when product details are updated."
		}
	}
	
	workflow ProductUpdated implements ProductUpdated{
    	summary "Updates product and product SKU data."
    	description "A manager updates the product and product SKU data and informs observers of changes."
		transaction ProductUpdated {
			   	roles(ProductInformationManager, ProductInformationObserver)
		}
	}


	process ProductCreation (Product product) {
    	summary "Creates one or more products in a product information management system."
		description "A consumer requests the creation of products. The manager creates the products and sends a message that informs observers of the products that were created."
		
		roles
		{
			ProductInformationConsumer "The product information consumer submits product details for the creation of one or more new products."
			ProductInformationManager "The product information manager creates new products and informs observers of added products. "
			ProductInformationObserver "The product information observer is informed when new products are created. "
		}
		
		preconditions(!exists(product))
	
		workflow  {
    		summary "Creates one or more products in a product information management system."
			description "A consumer requests the creation of one or more products. The manager creates the products and sends a message that informs observers of the products that were created."
				// A consumer asks the PIM to create a product
			transaction CreateProduct {
				roles(ProductInformationConsumer,ProductInformationManager)
			}
				// The PIM informs an observer that a product was created
			workflow ProductCreated {
    			summary "Informs observers that products were created."
		    	description "The product information manager informs any observers that products were created."
			   	roles(ProductInformationManager, ProductInformationObserver)
			}
		}

	    postconditions {
			success(exists(product))
			failure(!exists(product))
		}
	}	
	process ProductCreated {
    	summary "Creates a product in a product information management system."
		description "A manager creates a product and sends a message that informs observers of the products that were created."
		
		roles {
			ProductInformationManager "The product information manager creates new products and informs observers of added products. "
			ProductInformationObserver "The product information observer is informed when new products are created. "
		}
	}
	
	workflow ProductCreated implements ProductCreated{
    	summary "Creates products in a product information management system."
    	description "A manager creates the products and informs observers of the product that were created."
		transaction ProductCreated {
			roles(ProductInformationManager, ProductInformationObserver)
		}
	}

    process ProductDeletion (Product product) {
    	summary "Deletes products."
		description "A consumer requests the deletion of products. The manager deletes the products and sends a message that informs observers of the products that were deleted."
		
		roles
		{
			ProductInformationConsumer "The product information consumer requests that specified products be deleted from the system. "
			ProductInformationManager "The product information manager deletes products and informs observers of deletions."
			ProductInformationObserver "The product information observer is informed when products are deleted. "
		}
		
		preconditions(exists(product))
	
		workflow {
			summary "Deletes products from a XPIM."
			description "A consumer requests the deletion of products and the manager deletes the products."
				// A consumer asks the PIM to delete a product
			transaction DeleteProduct {
				roles(ProductInformationConsumer,ProductInformationManager)
			}
			
			// The PIM informs an observer that a product was deleted
			workflow ProductDeleted {
		    	summary "Informs observers of the products that were deleted."
    			description "The manager sends a message that informs observers of the products that were deleted."
			   	roles(ProductInformationManager, ProductInformationObserver)
			}
		}
		
	    postconditions {
			success(!exists(product))
			failure(exists(product))
		}
	}
	process ProductDeleted{
    	summary "Informs observers of the products that were deleted."
		description "The manager sends a message that informs observers of the products that were deleted."
		
		roles {
			ProductInformationManager "The product information manager informs observers of deleted products. "
			ProductInformationObserver "The product information observer is informed of the products that were deleted. "
		}
	}
	
	workflow ProductDeleted implements ProductDeleted{
    	summary "Informs observers of the products that were deleted."
		description "The manager sends a message that informs observers of the products that were deleted."
		transaction ProductDeleted {
			roles(ProductInformationManager, ProductInformationObserver)
		}
	}
	
	
}